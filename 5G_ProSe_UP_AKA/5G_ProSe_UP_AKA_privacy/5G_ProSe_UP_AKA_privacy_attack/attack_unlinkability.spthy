theory UP_5G_Prose_authentication_protocol begin

// Function signature and definition of the equational theory E

builtins: multiset, xor
functions: Int/2, KDF/2, adec/2, aenc/2, f1/2, f1_star/2, f2/2,
           f3/2, f4/2, f5/2, f5_star/2, fst/1, pair/2, pk/1, sdec/2, senc/2,
           snd/1
equations:
    adec(aenc(x.1, pk(x.2)), x.2) = x.1,
    fst(<x.1, x.2>) = x.1,
    sdec(senc(x.1, x.2), x.2) = x.1,
    snd(<x.1, x.2>) = x.2



rule (modulo E) send_secure:
   [ SndS( ~cid, A, B, m ) ] --> [ Sec( ~cid, A, B, m ) ]

rule (modulo E) receive_secure:
   [ Sec( ~cid, A, B, m ) ] --> [ RcvS( ~cid, A, B, m ) ]

rule (modulo E) init_PKMF_relay:
   [ Fr( ~idPKMF ) ]
  --[ PKMF_relay( ~idPKMF ) ]->
   [ !PKMF( ~idPKMF ), Out( ~idPKMF ) ]

rule (modulo E) init_homeNet:
   [ Fr( ~sk_HN ), Fr( ~idHN ) ]
  --[ HomeNet( ~idHN ) ]->
   [
   !HN( ~idHN, ~sk_HN ), !Pk( ~idHN, pk(~sk_HN) ),
   Out( <~idHN, pk(~sk_HN)> )
   ]

rule (modulo E) add_RSC:
   [ Fr( ~RSC ), Fr( ~DUCK ), Fr( ~DUIK ) ]
  -->
   [ !Ltk_Prose( ~RSC, ~DUCK, ~DUIK ) ]

rule (modulo E) supi_supply:
   [ Fr( ~a ), Fr( ~b ) ]
  --[ Once( ) ]->
   [ !SUPI_Init( (~a+~b) ), SUPI( ~a ), SUPI( diff(~a, ~b) ) ]

rule (modulo E) add_subscription:
   [
   !SUPI_Init( (~supi+z) ), Fr( ~k ), Fr( ~sqn_root ),
   Fr( ~User_info_remote ), !HN( ~idHN, ~sk_HN )
   ]
  --[
  Subscribe( ~supi, ~idHN ), Sqn_Create( ~supi, ~idHN, ~sqn_root ),
  CreateUser( ~supi, ~k, ~idHN )
  ]->
   [
   !Ltk_Sym( ~supi, ~idHN, ~k, ~sqn_root, ~User_info_remote ),
   Sqn_UE( ~supi, ~idHN, ('1'+~sqn_root), ~sqn_root, '1' ),
   Sqn_HN( ~supi, ~idHN, ('1'+~sqn_root), ~sqn_root, '1' )
   ]

rule (modulo E) init_Relay:
   [ Fr( ~User_info_relay ), !PKMF( ~idPKMF ), Fr( ~supi_relay ) ]
  --[ CreateRelay( ~supi_relay ) ]->
   [ !Relay( ~User_info_relay, ~supi_relay, ~idPKMF ) ]

rule (modulo E) reveal_Ltk_supi_relay:
   [ !Relay( ~User_info_relay, ~supi_relay, ~idPKMF ) ]
  --[
  Rev( ~supi_relay, <'supi_relay', ~supi_relay> ),
  Rev( ~idPKMF, <'supi_relay', ~supi_relay> )
  ]->
   [ Out( ~supi_relay ) ]

rule (modulo E) reveal_Ltk_RSC:
   [
   !Ltk_Prose( ~RSC, ~DUCK, ~DUIK ),
   !Ltk_Sym( ~supi, ~idHN, ~k, ~sqn_root, ~User_info_remote ),
   !Relay( ~User_info_relay, ~supi_relay, ~idPKMF )
   ]
  --[ Rev( ~supi, <'RSC', ~RSC> ), Rev( ~supi_relay, <'RSC', ~RSC> )
  ]->
   [ Out( ~RSC ) ]

rule (modulo E) reveal_Ltk_DUIK:
   [
   !Ltk_Prose( ~RSC, ~DUCK, ~DUIK ),
   !Ltk_Sym( ~supi, ~idHN, ~k, ~sqn_root, ~User_info_remote ),
   !Relay( ~User_info_relay, ~supi_relay, ~idPKMF )
   ]
  --[
  Rev( ~supi, <'DUIK', ~DUIK> ), Rev( ~supi_relay, <'DUIK', ~DUIK> )
  ]->
   [ Out( ~DUIK ) ]

rule (modulo E) reveal_Ltk_DUCK:
   [
   !Ltk_Prose( ~RSC, ~DUCK, ~DUIK ),
   !Ltk_Sym( ~supi, ~idHN, ~k, ~sqn_root, ~User_info_remote ),
   !Relay( ~User_info_relay, ~supi_relay, ~idPKMF )
   ]
  --[
  Rev( ~supi, <'DUCK', ~DUCK> ), Rev( ~supi_relay, <'DUCK', ~DUCK> )
  ]->
   [ Out( ~DUCK ) ]

rule (modulo E) ue_send_DCR_step1:
   [
   !Ltk_Sym( ~supi, ~idHN, ~k, ~sqn_root, ~User_info_remote ),
   !Ltk_Prose( ~RSC, ~DUCK, ~DUIK ), SUPI( ~supi ),
   !Pk( ~idHN, pk_HN ),
   !Relay( ~User_info_relay, ~supi_relay, ~idPKMF ), Fr( ~SeCap ),
   Fr( ~CP_Se_Po ), Fr( ~UP_Se_Po ), Fr( ~R ), Fr( ~MSB_KsessID ),
   Fr( ~Nonce1 )
   ]
  --[
  Start_UE_Session( ~supi ),
  Running( ~supi, ~idHN, <'HN', 'remote', 'RSC', ~RSC> ),
  Running( ~supi, ~idHN, <'HN', 'remote', 'supi', ~supi> )
  ]->
   [
   St_1_UE( ~supi_relay, ~supi, ~User_info_remote, ~User_info_relay,
            ~idHN, ~k, ~sqn_root, ~RSC, ~Nonce1, ~DUCK, ~DUIK, ~SeCap,
            ~CP_Se_Po, ~UP_Se_Po, ~MSB_KsessID
   ),
   Out( <<aenc(<~supi, ~R>, pk_HN), ~idHN>, ~User_info_remote, 
         ~User_info_relay, (~RSC⊕KDF(~DUCK, <~Nonce1, ~RSC>)), ~Nonce1, 
         ~SeCap, ~CP_Se_Po, ~MSB_KsessID, 
         KDF(~DUIK,
             <<aenc(<~supi, ~R>, pk_HN), ~idHN>, ~User_info_remote, 
              ~User_info_relay, (~RSC⊕KDF(~DUCK, <~Nonce1, ~RSC>)), ~Nonce1, 
              ~SeCap, ~CP_Se_Po, ~MSB_KsessID>)
        >
   )
   ]

rule (modulo E) relay_send_relaykeyrequest_step2:
   [
   Fr( ~transactionid ),
   In( <<aenc(<~supi, ~R>, pk_HN), ~idHN>, ~User_info_remote, 
        ~User_info_relay, (~RSC⊕KDF(~DUCK, <Nonce1, ~RSC>)), Nonce1, 
        ~SeCap, ~CP_Se_Po, ~MSB_KsessID, 
        KDF(~DUIK,
            <<aenc(<~supi, ~R>, pk_HN), ~idHN>, ~User_info_remote, 
             ~User_info_relay, (~RSC⊕KDF(~DUCK, <Nonce1, ~RSC>)), Nonce1, 
             ~SeCap, ~CP_Se_Po, ~MSB_KsessID>)
       >
   ),
   !Ltk_Prose( ~RSC, ~DUCK, ~DUIK ),
   !Relay( ~User_info_relay, ~supi_relay, ~idPKMF )
   ]
  --[
  Out_relay( ~transactionid, <aenc(<~supi, ~R>, pk_HN), ~idHN>, ~RSC,
             Nonce1
  ),
  Start_relay_Session( ~supi_relay ),
  Running( ~supi_relay, ~idPKMF, <'PKMF', 'relay', 'RSC', ~RSC> ),
  Running( ~supi_relay, ~idPKMF,
           <'PKMF', 'relay', 'supi_relay', ~supi_relay>
  )
  ]->
   [
   St_1_relay( ~transactionid, <aenc(<~supi, ~R>, pk_HN), ~idHN>,
               ~supi, ~User_info_relay, ~idPKMF, ~idHN, ~supi_relay, ~RSC, Nonce1,
               ~SeCap, ~CP_Se_Po, ~MSB_KsessID
   ),
   SndS( ~transactionid, ~supi_relay, ~idPKMF,
         <'relaykeyrequest', ~transactionid, 
          <aenc(<~supi, ~R>, pk_HN), ~idHN>, ~RSC, Nonce1>
   )
   ]

rule (modulo E) PKMF_receive_relaykeyrequest_step3:
   [
   !PKMF( ~idPKMF ), Fr( ~cid ),
   !Relay( ~User_info_relay, supi_relay, ~idPKMF ),
   RcvS( transactionid, supi_relay, ~idPKMF,
         <'relaykeyrequest', transactionid, 
          <aenc(<~supi, ~R>, pk_HN), idHN>, RSC, Nonce1>
   )
   ]
  --[
  Start_PKMF_Session( ~idPKMF ),
  In_PKMF( transactionid, <aenc(<~supi, ~R>, pk_HN), idHN>, RSC,
           Nonce1
  ),
  Running( ~idPKMF, idHN, <'HN', 'PKMF', 'RSC', RSC> )
  ]->
   [
   St_1_PKMF( transactionid, <aenc(<~supi, ~R>, pk_HN), idHN>,
              ~User_info_relay, ~supi, ~idPKMF, supi_relay, idHN, RSC, Nonce1,
              ~cid
   ),
   SndS( ~cid, ~idPKMF, idHN,
         <'ProseAuthenticateRequest', <aenc(<~supi, ~R>, pk_HN), idHN>, 
          RSC, Nonce1>
   )
   ]

rule (modulo E) HN_receive_Nausf_UE_PAR_step4:
   [
   !HN( ~idHN, ~sk_HN ),
   RcvS( ~cid, idPKMF, ~idHN,
         <'ProseAuthenticateRequest', 
          <aenc(<~supi, ~R>, pk(~sk_HN)), ~idHN>, ~RSC, Nonce1>
   ),
   !Ltk_Sym( ~supi, ~idHN, ~k, ~sqn_root, ~User_info_remote ),
   !Relay( ~User_info_relay, ~supi_relay, idPKMF ),
   Sqn_HN( ~supi, ~idHN, SqnHN, ~sqn_root, count ), Fr( ~RAND ),
   Fr( UP_PRUKID ), Fr( ~Nonce2 ), In( count )
   ]
  --[
  Sqn_HN_Invariance( ~idHN, ~supi, ('1'+SqnHN), ~sqn_root,
                     ('1'+count)
  ),
  Out_HN( <
           KDF(KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>, <~RAND, ~supi, ~idHN>),
               <~RSC, Nonce1, ~Nonce2>), 
           ~Nonce2, UP_PRUKID, ~RAND, 
           <(f5(~k, ~RAND)⊕('1'+SqnHN)), f1(~k, <('1'+SqnHN), ~RAND>)>, 
           senc(UP_PRUKID,
                KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                    <~RAND, ~supi, 'GPI_confidentiality'>)), 
           Int(KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                   <~RAND, ~supi, 'GPI_integrity'>),
               <~RAND, 
                <(f5(~k, ~RAND)⊕('1'+SqnHN)), f1(~k, <('1'+SqnHN), ~RAND>)>, 
                senc(UP_PRUKID,
                     KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                         <~RAND, ~supi, 'GPI_confidentiality'>))
               >)
          >
  ),
  Start_HN_Session( ~idHN ),
  Secret( <'HN', ~idHN>, 'UPPRUK',
          KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>, <~RAND, ~supi, ~idHN>)
  ),
  Secret( <'HN', ~idHN>, 'UPPRUKID', UP_PRUKID ),
  Secret( <'HN', ~idHN>, 'RSC', ~RSC ),
  Secret( <'HN', ~idHN>, 'supi', ~supi ),
  Secret( <'HN', ~idHN>, 'K_NRp',
          KDF(KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>, <~RAND, ~supi, ~idHN>),
              <~RSC, Nonce1, ~Nonce2>)
  ),
  Running( ~idHN, ~supi, <'remote', 'HN', 'RSC', ~RSC> ),
  Running( ~idHN, ~supi,
           <'remote', 'HN', 'UP_PRUK', 
            KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>, <~RAND, ~supi, ~idHN>)>
  ),
  Running( ~idHN, ~supi, <'remote', 'HN', 'UP_PRUKID', UP_PRUKID> ),
  Running( ~idHN, ~supi, <'remote', 'HN', 'supi', ~supi> ),
  Running( ~idHN, idPKMF, <'PKMF', 'HN', 'RSC', ~RSC> ),
  Running( ~idHN, ~supi_relay, <'relay', 'HN', 'RSC', ~RSC> ),
  Running( ~idHN, ~supi_relay,
           <'relay', 'HN', 'UP_PRUKID', UP_PRUKID>
  ),
  Running( ~idHN, ~supi_relay,
           <'relay', 'HN', 'K_NRp', 
            KDF(KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>, <~RAND, ~supi, ~idHN>),
                <~RSC, Nonce1, ~Nonce2>)
           >
  ),
  Commit( ~idHN, ~supi, <'HN', 'remote', 'RSC', ~RSC> ),
  Commit( ~idHN, ~supi, <'HN', 'remote', 'supi', ~supi> ),
  Commit( ~idHN, idPKMF, <'HN', 'PKMF', 'RSC', ~RSC> ),
  Honest( ~supi ), Honest( ~supi_relay ), Honest( ~idHN ),
  Honest( idPKMF )
  ]->
   [
   St_1_HN( ~idHN, <aenc(<~supi, ~R>, pk(~sk_HN)), ~idHN>, ~supi,
            ~User_info_relay, ~supi_relay, idPKMF, ~k, ('1'+SqnHN), ~RAND,
            ~sqn_root, ~sk_HN, ~cid, ~RSC, Nonce1,
            KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>, <~RAND, ~supi, ~idHN>),
            UP_PRUKID
   ),
   Sqn_HN( ~supi, ~idHN, ('1'+SqnHN), ~sqn_root, ('1'+count) ),
   SndS( ~cid, ~idHN, idPKMF,
         <'ProseAuthenticateResponse', 
          KDF(KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>, <~RAND, ~supi, ~idHN>),
              <~RSC, Nonce1, ~Nonce2>), 
          ~Nonce2, UP_PRUKID, ~RAND, 
          <(f5(~k, ~RAND)⊕('1'+SqnHN)), f1(~k, <('1'+SqnHN), ~RAND>)>, 
          senc(UP_PRUKID,
               KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                   <~RAND, ~supi, 'GPI_confidentiality'>)), 
          Int(KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                  <~RAND, ~supi, 'GPI_integrity'>),
              <~RAND, 
               <(f5(~k, ~RAND)⊕('1'+SqnHN)), f1(~k, <('1'+SqnHN), ~RAND>)>, 
               senc(UP_PRUKID,
                    KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                        <~RAND, ~supi, 'GPI_confidentiality'>))
              >)
         >
   )
   ]

rule (modulo E) PKMF_receive_Nausf_UE_PAResponse_step5:
   [
   St_1_PKMF( transactionid, suci, User_info_relay, ~supi, ~idPKMF,
              supi_relay, idHN, RSC, Nonce1, ~cid
   ),
   RcvS( ~cid, idHN, ~idPKMF,
         <'ProseAuthenticateResponse', K_NRp, ~Nonce2, UP_PRUKID, RAND, 
          AUTN, P_TID, GPI_MAC>
   )
   ]
  --[
  In_PKMF2( <K_NRp, ~Nonce2, UP_PRUKID, RAND, AUTN, P_TID, GPI_MAC>
  ),
  Out_PKMF2( K_NRp, ~Nonce2, UP_PRUKID, <RAND, AUTN, P_TID, GPI_MAC>
  ),
  PKMF_End( ), Secret( <'PKMF', ~idPKMF>, 'UPPRUKID', UP_PRUKID ),
  Secret( <'PKMF', ~idPKMF>, 'RSC', RSC ),
  Secret( <'PKMF', ~idPKMF>, 'K_NRp', K_NRp ),
  Running( ~idPKMF, supi_relay, <'relay', 'PKMF', 'RSC', RSC> ),
  Running( ~idPKMF, supi_relay,
           <'relay', 'PKMF', 'supi_relay', supi_relay>
  ),
  Commit( ~idPKMF, supi_relay, <'PKMF', 'relay', 'RSC', RSC> ),
  Commit( ~idPKMF, supi_relay,
          <'PKMF', 'relay', 'supi_relay', supi_relay>
  ),
  Commit( ~idPKMF, idHN, <'PKMF', 'HN', 'RSC', RSC> ),
  Commit( ~idPKMF, ~supi, <'PKMF', 'remote', 'RSC', RSC> ),
  Honest( ~supi ), Honest( supi_relay ), Honest( idHN ),
  Honest( ~idPKMF )
  ]->
   [
   St_2_PKMF( transactionid, suci, User_info_relay, ~supi, ~idPKMF,
              supi_relay, idHN, RSC, Nonce1, ~cid, RAND
   ),
   SndS( transactionid, ~idPKMF, supi_relay,
         <'relay_auth_request', K_NRp, ~Nonce2, UP_PRUKID, RAND, AUTN, 
          P_TID, GPI_MAC>
   )
   ]

rule (modulo E) relay_receive_relay_auth_request_step6:
   [
   Fr( ~LSB_KsessID ),
   St_1_relay( ~transactionid, suci, ~supi, ~User_info_relay, ~idPKMF,
               idHN, ~supi_relay, ~RSC, Nonce1, ~SeCap, ~CP_Se_Po, ~MSB_KsessID
   ),
   RcvS( ~transactionid, ~idPKMF, ~supi_relay,
         <'relay_auth_request', K_NRp, ~Nonce2, UP_PRUKID, RAND, AUTN, 
          P_TID, GPI_MAC>
   )
   ]
  --[
  In_relay2( K_NRp, ~Nonce2, UP_PRUKID, <RAND, AUTN, P_TID, GPI_MAC>
  ),
  Commit( ~supi_relay, ~idPKMF, <'relay', 'PKMF', 'RSC', ~RSC> ),
  Commit( ~supi_relay, ~idPKMF,
          <'relay', 'PKMF', 'supi_relay', ~supi_relay>
  ),
  Commit( ~supi_relay, idHN, <'relay', 'HN', 'RSC', ~RSC> ),
  Commit( ~supi_relay, idHN, <'relay', 'HN', 'UP_PRUKID', UP_PRUKID>
  ),
  Commit( ~supi_relay, idHN, <'relay', 'HN', 'K_NRp', K_NRp> ),
  Honest( ~supi ), Honest( ~supi_relay ), Honest( idHN ),
  Honest( ~idPKMF )
  ]->
   [
   St_2_relay( ~transactionid, suci, ~supi, ~User_info_relay, ~idPKMF,
               idHN, ~supi_relay, ~RSC, Nonce1, ~SeCap, ~CP_Se_Po, ~MSB_KsessID,
               RAND, K_NRp, UP_PRUKID, ~Nonce2, KDF(K_NRp, <Nonce1, ~Nonce2>),
               KDF(KDF(K_NRp, <Nonce1, ~Nonce2>),
                   <'0x00', 'confidential_algorithm'>),
               KDF(KDF(K_NRp, <Nonce1, ~Nonce2>),
                   <'0x01', 'integrity_algorithm'>),
               <~LSB_KsessID, ~MSB_KsessID>
   ),
   Out( <'DSMCommand', ~Nonce2, ~CP_Se_Po, ~SeCap, ~LSB_KsessID, 
         <RAND, AUTN, P_TID, GPI_MAC>, 
         KDF(KDF(KDF(K_NRp, <Nonce1, ~Nonce2>),
                 <'0x01', 'integrity_algorithm'>),
             <~CP_Se_Po, ~Nonce2, ~SeCap, ~LSB_KsessID, RAND, AUTN, P_TID, 
              GPI_MAC>)
        >
   )
   ]

rule (modulo E) ue_receive_DSMCommand_step7a:
   [
   St_1_UE( ~supi_relay, ~supi, ~User_info_remote, ~User_info_relay,
            ~idHN, ~k, ~sqn_root, ~RSC, Nonce1, ~DUCK, ~DUIK, ~SeCap,
            ~CP_Se_Po, ~UP_Se_Po, ~MSB_KsessID
   ),
   Sqn_UE( ~supi, ~idHN, SqnUE, ~sqn_root, count ), !PKMF( idPKMF ),
   In( <'DSMCommand', ~Nonce2, ~CP_Se_Po, ~SeCap, ~LSB_KsessID, 
        <RAND, <(f5(~k, RAND)⊕(SqnUE+dif)), f1(~k, <(SqnUE+dif), RAND>)>, 
         senc(UP_PRUKID,
              KDF(<f3(~k, RAND), f4(~k, RAND)>,
                  <RAND, ~supi, 'GPI_confidentiality'>)), 
         Int(KDF(<f3(~k, RAND), f4(~k, RAND)>,
                 <RAND, ~supi, 'GPI_integrity'>),
             <RAND, <(f5(~k, RAND)⊕(SqnUE+dif)), f1(~k, <(SqnUE+dif), RAND>)>, 
              senc(UP_PRUKID,
                   KDF(<f3(~k, RAND), f4(~k, RAND)>,
                       <RAND, ~supi, 'GPI_confidentiality'>))
             >)
        >, 
        KDF(KDF(KDF(KDF(KDF(<f3(~k, RAND), f4(~k, RAND)>,
                            <RAND, ~supi, ~idHN>),
                        <~RSC, Nonce1, ~Nonce2>),
                    <Nonce1, ~Nonce2>),
                <'0x01', 'integrity_algorithm'>),
            <~CP_Se_Po, ~Nonce2, ~SeCap, ~LSB_KsessID, RAND, 
             <(f5(~k, RAND)⊕(SqnUE+dif)), f1(~k, <(SqnUE+dif), RAND>)>, 
             senc(UP_PRUKID,
                  KDF(<f3(~k, RAND), f4(~k, RAND)>,
                      <RAND, ~supi, 'GPI_confidentiality'>)), 
             Int(KDF(<f3(~k, RAND), f4(~k, RAND)>,
                     <RAND, ~supi, 'GPI_integrity'>),
                 <RAND, <(f5(~k, RAND)⊕(SqnUE+dif)), f1(~k, <(SqnUE+dif), RAND>)>, 
                  senc(UP_PRUKID,
                       KDF(<f3(~k, RAND), f4(~k, RAND)>,
                           <RAND, ~supi, 'GPI_confidentiality'>))
                 >)
            >)
       >
   )
   ]
  --[
  Sqn_UE_Invariance( ~supi, ~idHN, (SqnUE+dif), ~sqn_root,
                     (count+dif)
  ),
  Sqn_UE_Change( ~supi, ~idHN, (SqnUE+dif) ),
  Sqn_UE_Use( ~supi, ~idHN, (SqnUE+dif) ),
  Running( ~supi, ~supi_relay,
           <'relay', 'remote', 'UP_PRUKID', UP_PRUKID>
  ),
  Running( ~supi, ~supi_relay,
           <'relay', 'remote', 'K_NRp', 
            KDF(KDF(<f3(~k, RAND), f4(~k, RAND)>, <RAND, ~supi, ~idHN>),
                <~RSC, Nonce1, ~Nonce2>)
           >
  ),
  Running( ~supi, ~supi_relay, <'relay', 'remote', 'RSC', ~RSC> ),
  Running( ~supi, ~supi_relay,
           <'relay', 'remote', 'K_sessID', ~LSB_KsessID, ~MSB_KsessID>
  ),
  Running( ~supi, ~supi_relay,
           <'relay', 'remote', 'K_relay_sess', 
            KDF(KDF(KDF(<f3(~k, RAND), f4(~k, RAND)>, <RAND, ~supi, ~idHN>),
                    <~RSC, Nonce1, ~Nonce2>),
                <Nonce1, ~Nonce2>)
           >
  ),
  Running( ~supi, ~supi_relay,
           <'relay', 'remote', 'K_relay_enc', 
            KDF(KDF(KDF(KDF(<f3(~k, RAND), f4(~k, RAND)>,
                            <RAND, ~supi, ~idHN>),
                        <~RSC, Nonce1, ~Nonce2>),
                    <Nonce1, ~Nonce2>),
                <'0x00', 'confidential_algorithm'>)
           >
  ),
  Running( ~supi, ~supi_relay,
           <'relay', 'remote', 'K_relay_int', 
            KDF(KDF(KDF(KDF(<f3(~k, RAND), f4(~k, RAND)>,
                            <RAND, ~supi, ~idHN>),
                        <~RSC, Nonce1, ~Nonce2>),
                    <Nonce1, ~Nonce2>),
                <'0x01', 'integrity_algorithm'>)
           >
  ),
  Running( ~supi, ~supi_relay, <'relay', 'remote', 'SeCap', ~SeCap>
  ),
  Running( ~supi, ~supi_relay,
           <'relay', 'remote', 'CPsecurity_policy', ~CP_Se_Po>
  ),
  Running( ~supi, ~supi_relay,
           <'relay', 'remote', 'UPsecurity_policy', ~UP_Se_Po>
  ),
  Honest( ~supi ), Honest( ~supi_relay ), Honest( ~idHN ),
  Honest( idPKMF )
  ]->
   [
   St_2_UE( ~supi_relay, ~supi, ~User_info_remote, ~User_info_relay,
            ~idHN, ~k, ~sqn_root, ~RSC, Nonce1, ~DUCK, ~DUIK, ~SeCap,
            ~CP_Se_Po, ~UP_Se_Po, ~MSB_KsessID, idPKMF,
            KDF(<f3(~k, RAND), f4(~k, RAND)>, <RAND, ~supi, ~idHN>), UP_PRUKID,
            KDF(KDF(<f3(~k, RAND), f4(~k, RAND)>, <RAND, ~supi, ~idHN>),
                <~RSC, Nonce1, ~Nonce2>),
            ~Nonce2,
            KDF(KDF(KDF(<f3(~k, RAND), f4(~k, RAND)>, <RAND, ~supi, ~idHN>),
                    <~RSC, Nonce1, ~Nonce2>),
                <Nonce1, ~Nonce2>),
            KDF(KDF(KDF(KDF(<f3(~k, RAND), f4(~k, RAND)>,
                            <RAND, ~supi, ~idHN>),
                        <~RSC, Nonce1, ~Nonce2>),
                    <Nonce1, ~Nonce2>),
                <'0x00', 'confidential_algorithm'>),
            KDF(KDF(KDF(KDF(<f3(~k, RAND), f4(~k, RAND)>,
                            <RAND, ~supi, ~idHN>),
                        <~RSC, Nonce1, ~Nonce2>),
                    <Nonce1, ~Nonce2>),
                <'0x01', 'integrity_algorithm'>),
            <~LSB_KsessID, ~MSB_KsessID>
   ),
   Out( <'DSMComplete', <~LSB_KsessID, ~MSB_KsessID>, 
         senc(<~UP_Se_Po, 
               Int(KDF(KDF(KDF(KDF(<f3(~k, RAND), f4(~k, RAND)>,
                                   <RAND, ~supi, ~idHN>),
                               <~RSC, Nonce1, ~Nonce2>),
                           <Nonce1, ~Nonce2>),
                       <'0x01', 'integrity_algorithm'>),
                   <~UP_Se_Po, ~LSB_KsessID, ~MSB_KsessID>)
              >,
              KDF(KDF(KDF(KDF(<f3(~k, RAND), f4(~k, RAND)>,
                              <RAND, ~supi, ~idHN>),
                          <~RSC, Nonce1, ~Nonce2>),
                      <Nonce1, ~Nonce2>),
                  <'0x00', 'confidential_algorithm'>))
        >
   ),
   Sqn_UE( ~supi, ~idHN, (SqnUE+dif), ~sqn_root, (count+dif) )
   ]

rule (modulo E) relay_receive_DSMComplete_step8a:
   [
   St_2_relay( ~transactionid, suci, ~supi, ~User_info_relay, ~idPKMF,
               idHN, ~supi_relay, ~RSC, Nonce1, ~SeCap, ~CP_Se_Po, ~MSB_KsessID,
               RAND, K_NRp, UP_PRUKID, ~Nonce2, K_relay_sess, K_relay_enc,
               K_relay_int, KsessID
   ),
   In( <'DSMComplete', KsessID, 
        senc(<~UP_Se_Po, Int(K_relay_int, <~UP_Se_Po, KsessID>)>,
             K_relay_enc)
       >
   )
   ]
  --[
  Commit( ~supi_relay, ~supi,
          <'relay', 'remote', 'UP_PRUKID', UP_PRUKID>
  ),
  Commit( ~supi_relay, ~supi, <'relay', 'remote', 'K_NRp', K_NRp> ),
  Commit( ~supi_relay, ~supi, <'relay', 'remote', 'RSC', ~RSC> ),
  Commit( ~supi_relay, ~supi,
          <'relay', 'remote', 'K_sessID', KsessID>
  ),
  Commit( ~supi_relay, ~supi,
          <'relay', 'remote', 'K_relay_sess', K_relay_sess>
  ),
  Commit( ~supi_relay, ~supi,
          <'relay', 'remote', 'K_relay_enc', K_relay_enc>
  ),
  Commit( ~supi_relay, ~supi,
          <'relay', 'remote', 'K_relay_int', K_relay_int>
  ),
  Commit( ~supi_relay, ~supi, <'relay', 'remote', 'SeCap', ~SeCap> ),
  Commit( ~supi_relay, ~supi,
          <'relay', 'remote', 'CPsecurity_policy', ~CP_Se_Po>
  ),
  Commit( ~supi_relay, ~supi,
          <'relay', 'remote', 'UPsecurity_policy', ~UP_Se_Po>
  ),
  Secret( <'relay', ~supi_relay>, 'K_relay_sess', K_relay_sess ),
  Secret( <'relay', ~supi_relay>, 'K_relay_enc', K_relay_enc ),
  Secret( <'relay', ~supi_relay>, 'K_relay_int', K_relay_int ),
  Secret( <'relay', ~supi_relay>, 'UPPRUKID', UP_PRUKID ),
  Secret( <'relay', ~supi_relay>, 'RSC', ~RSC ),
  Secret( <'relay', ~supi_relay>, 'K_NRp', K_NRp ),
  Running( ~supi_relay, ~supi,
           <'remote', 'relay', 'UPsecurity_policy', ~UP_Se_Po>
  ),
  Running( ~supi_relay, ~supi,
           <'remote', 'relay', 'K_sessID', KsessID>
  ),
  Running( ~supi_relay, ~supi,
           <'remote', 'relay', 'K_relay_sess', K_relay_sess>
  ),
  Running( ~supi_relay, ~supi,
           <'remote', 'relay', 'K_relay_enc', K_relay_enc>
  ),
  Running( ~supi_relay, ~supi,
           <'remote', 'relay', 'K_relay_int', K_relay_int>
  ),
  Running( ~supi_relay, ~supi,
           <'remote', 'relay', 'UP_PRUKID', UP_PRUKID>
  ),
  Running( ~supi_relay, ~supi, <'remote', 'relay', 'K_NRp', K_NRp> ),
  Running( ~supi_relay, ~supi, <'remote', 'relay', 'RSC', ~RSC> ),
  Running( ~supi_relay, ~supi, <'remote', 'relay', 'SeCap', ~SeCap>
  ),
  Running( ~supi_relay, ~supi,
           <'remote', 'relay', 'CPsecurity_policy', ~CP_Se_Po>
  ),
  Honest( ~supi ), Honest( ~supi_relay ), Honest( idHN ),
  Honest( ~idPKMF )
  ]->
   [
   Out( <'DCA', KsessID, 
         senc(<~User_info_relay, 
               Int(K_relay_int, <~User_info_relay, KsessID>)>,
              K_relay_enc)
        >
   )
   ]

rule (modulo E) ue_receive_DCA_step9:
   [
   St_2_UE( ~supi_relay, ~supi, ~User_info_remote, ~User_info_relay,
            ~idHN, ~k, ~sqn_root, ~RSC, ~Nonce1, ~DUCK, ~DUIK, ~SeCap,
            ~CP_Se_Po, ~UP_Se_Po, ~MSB_KsessID, idPKMF, UP_PRUK, UP_PRUKID,
            K_NRp, ~Nonce2, K_relay_sess, K_relay_enc, K_relay_int, KsessID
   ),
   In( <'DCA', KsessID, 
        senc(<~User_info_relay, 
              Int(K_relay_int, <~User_info_relay, KsessID>)>,
             K_relay_enc)
       >
   )
   ]
  --[
  UE_End( ),
  Secret( <'remote', ~supi>, 'K_relay_sess', K_relay_sess ),
  Secret( <'remote', ~supi>, 'K_relay_enc', K_relay_enc ),
  Secret( <'remote', ~supi>, 'K_relay_int', K_relay_int ),
  Secret( <'remote', ~supi>, 'UPPRUKID', UP_PRUKID ),
  Secret( <'remote', ~supi>, 'UPPRUK', UP_PRUK ),
  Secret( <'remote', ~supi>, 'supi', ~supi ),
  Secret( <'remote', ~supi>, 'RSC', ~RSC ),
  Secret( <'remote', ~supi>, 'K_NRp', K_NRp ),
  Commit( ~supi, ~supi_relay,
          <'remote', 'relay', 'K_sessID', KsessID>
  ),
  Commit( ~supi, ~supi_relay,
          <'remote', 'relay', 'K_relay_sess', K_relay_sess>
  ),
  Commit( ~supi, ~supi_relay,
          <'remote', 'relay', 'K_relay_enc', K_relay_enc>
  ),
  Commit( ~supi, ~supi_relay,
          <'remote', 'relay', 'K_relay_int', K_relay_int>
  ),
  Commit( ~supi, ~supi_relay,
          <'remote', 'relay', 'UP_PRUKID', UP_PRUKID>
  ),
  Commit( ~supi, ~supi_relay, <'remote', 'relay', 'K_NRp', K_NRp> ),
  Commit( ~supi, ~supi_relay, <'remote', 'relay', 'RSC', ~RSC> ),
  Commit( ~supi, ~supi_relay, <'remote', 'relay', 'SeCap', ~SeCap> ),
  Commit( ~supi, ~supi_relay,
          <'remote', 'relay', 'CPsecurity_policy', ~CP_Se_Po>
  ),
  Commit( ~supi, ~supi_relay,
          <'remote', 'relay', 'UPsecurity_policy', ~UP_Se_Po>
  ),
  Commit( ~supi, ~idHN, <'remote', 'HN', 'RSC', ~RSC> ),
  Commit( ~supi, ~idHN, <'remote', 'HN', 'supi', ~supi> ),
  Commit( ~supi, ~idHN, <'remote', 'HN', 'UP_PRUK', UP_PRUK> ),
  Commit( ~supi, ~idHN, <'remote', 'HN', 'UP_PRUKID', UP_PRUKID> ),
  Honest( ~supi ), Honest( ~supi_relay ), Honest( ~idHN ),
  Honest( idPKMF ), Remote_EndConf( )
  ]->
   [ ]

rule (modulo E) ue_Direct_Security_Mode_Failure_step7b:
   [
   St_1_UE( ~supi_relay, ~supi, ~User_info_remote, ~User_info_relay,
            ~idHN, ~k, ~sqn_root, ~RSC, ~Nonce1, ~DUCK, ~DUIK, ~SeCap,
            ~CP_Se_Po, ~UP_Se_Po, ~MSB_KsessID
   ),
   Sqn_UE( ~supi, ~idHN, SqnUE, ~sqn_root, count ),
   In( <'DSMCommand', ~Nonce2, ~CP_Se_Po, ~SeCap, ~LSB_KsessID, 
        <RAND, <(SqnHN⊕f5(~k, RAND)), f1(~k, <SqnHN, RAND>)>, 
         senc(UP_PRUKID,
              KDF(<f3(~k, RAND), f4(~k, RAND)>,
                  <RAND, ~supi, 'GPI_confidentiality'>)), 
         Int(KDF(<f3(~k, RAND), f4(~k, RAND)>,
                 <RAND, ~supi, 'GPI_integrity'>),
             <RAND, <(SqnHN⊕f5(~k, RAND)), f1(~k, <SqnHN, RAND>)>, 
              senc(UP_PRUKID,
                   KDF(<f3(~k, RAND), f4(~k, RAND)>,
                       <RAND, ~supi, 'GPI_confidentiality'>))
             >)
        >, 
        KDF(K_relay_int,
            <~CP_Se_Po, ~Nonce2, ~SeCap, ~LSB_KsessID, RAND, 
             <(SqnHN⊕f5(~k, RAND)), f1(~k, <SqnHN, RAND>)>, 
             senc(UP_PRUKID,
                  KDF(<f3(~k, RAND), f4(~k, RAND)>,
                      <RAND, ~supi, 'GPI_confidentiality'>)), 
             Int(KDF(<f3(~k, RAND), f4(~k, RAND)>,
                     <RAND, ~supi, 'GPI_integrity'>),
                 <RAND, <(SqnHN⊕f5(~k, RAND)), f1(~k, <SqnHN, RAND>)>, 
                  senc(UP_PRUKID,
                       KDF(<f3(~k, RAND), f4(~k, RAND)>,
                           <RAND, ~supi, 'GPI_confidentiality'>))
                 >)
            >)
       >
   ),
   In( count )
   ]
  --[
  Greater_Or_Equal_Than( SqnUE, SqnHN ),
  Sqn_UE_Invariance( ~supi, ~idHN, SqnUE, ~sqn_root, count ),
  Sqn_UE_Nochange( ~supi, ~idHN, SqnUE )
  ]->
   [
   Out( <RAND, (SqnUE⊕f5_star(~k, RAND)), f1_star(~k, <SqnUE, RAND>)>
   ),
   Sqn_UE( ~supi, ~idHN, SqnUE, ~sqn_root, count )
   ]

rule (modulo E) relay_receive_syncFailure_authResp_step8b:
   [
   St_2_relay( ~transactionid, suci, ~supi, ~User_info_relay, ~idPKMF,
               idHN, ~supi_relay, RSC, Nonce1, ~SeCap, ~CP_Se_Po, ~MSB_KsessID,
               RAND, K_NRp, UP_PRUKID, ~Nonce2, K_relay_sess, K_relay_enc,
               K_relay_int, KsessID
   ),
   In( <RAND, AUTS> )
   ]
  --[ Out_relay5( idHN, suci, RSC, Nonce1, RAND, AUTS ) ]->
   [
   SndS( ~transactionid, ~supi_relay, ~idPKMF,
         <'resync', idHN, suci, RSC, Nonce1, RAND, AUTS>
   )
   ]

rule (modulo E) PKMF_receive_syncFailure_send_authSync_step9b:
   [
   St_2_PKMF( transactionid, suci, User_info_relay, ~supi, ~idPKMF,
              supi_relay, idHN, RSC, Nonce1, ~cid, RAND
   ),
   RcvS( transactionid, supi_relay, ~idPKMF,
         <'resync', idHN, suci, RSC, Nonce1, RAND, AUTS>
   )
   ]
  --[ In_PKMF5( idHN, suci, RSC, Nonce1, RAND, AUTS ) ]->
   [
   SndS( ~cid, ~idPKMF, idHN,
         <'resync', idHN, suci, RSC, Nonce1, RAND, AUTS>
   )
   ]

rule (modulo E) HN_receive_authSync_step10b:
   [
   St_1_HN( ~idHN, suci, ~supi, ~User_info_relay, ~supi_relay, idPKMF,
            ~k, SqnNext, ~RAND, ~sqn_root, ~sk_HN, ~cid, ~RSC, Nonce1, UP_PRUK,
            UP_PRUKID
   ),
   Sqn_HN( ~supi, ~idHN, SqnHN, ~sqn_root, count ),
   RcvS( ~cid, idPKMF, ~idHN,
         <'resync', ~idHN, suci, ~RSC, Nonce1, ~RAND, 
          (f5_star(~k, ~RAND)⊕(SqnHN+dif)), f1_star(~k, <(SqnHN+dif), ~RAND>)
         >
   ),
   In( (count+dif) )
   ]
  --[
  Sqn_HN_Invariance( ~idHN, ~supi, (SqnHN+dif), ~sqn_root,
                     (count+dif)
  ),
  HN_Resync_End( (count+dif) )
  ]->
   [ Sqn_HN( ~supi, ~idHN, (SqnHN+dif), ~sqn_root, (count+dif) ) ]

restriction subscribe_once [right]:
  "∀ HN1 HN2 supi #i #j.
    ((Subscribe( supi, HN1 ) @ #i) ∧ (Subscribe( supi, HN2 ) @ #j)) ⇒
    ((#i = #j) ∧ (HN1 = HN2))"
  // safety formula

restriction subscribe_once [left]:
  "∀ HN1 HN2 supi #i #j.
    ((Subscribe( supi, HN1 ) @ #i) ∧ (Subscribe( supi, HN2 ) @ #j)) ⇒
    ((#i = #j) ∧ (HN1 = HN2))"
  // safety formula

restriction greater_or_equal_than [right]:
  "∀ x y #i.
    (Greater_Or_Equal_Than( x, y ) @ #i) ⇒ (¬(∃ z. (x+z) = y))"
  // safety formula

restriction greater_or_equal_than [left]:
  "∀ x y #i.
    (Greater_Or_Equal_Than( x, y ) @ #i) ⇒ (¬(∃ z. (x+z) = y))"
  // safety formula

restriction once [right]:
  "∀ #i #j. ((Once( ) @ #i) ∧ (Once( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

restriction once [left]:
  "∀ #i #j. ((Once( ) @ #i) ∧ (Once( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

lemma dummy [right]:
  all-traces "¬(⊥)"
/*
guarded formula characterizing all counter-examples:
"⊥"
*/
by sorry

lemma dummy [left]:
  all-traces "¬(⊥)"
/*
guarded formula characterizing all counter-examples:
"⊥"
*/
by sorry

restriction phases [right]:
  "∀ UE1 UE2 #i #j.
    ((Start_UE_Session( UE1 ) @ #i) ∧ (Start_UE_Session( UE2 ) @ #j)) ⇒
    (((#i = #j) ∨ (∃ #k. ((UE_End( ) @ #k) ∧ (#i < #k)) ∧ (#k < #j))) ∨
     (∃ #k. ((UE_End( ) @ #k) ∧ (#j < #k)) ∧ (#k < #i)))"

restriction phases [left]:
  "∀ UE1 UE2 #i #j.
    ((Start_UE_Session( UE1 ) @ #i) ∧ (Start_UE_Session( UE2 ) @ #j)) ⇒
    (((#i = #j) ∨ (∃ #k. ((UE_End( ) @ #k) ∧ (#i < #k)) ∧ (#k < #j))) ∨
     (∃ #k. ((UE_End( ) @ #k) ∧ (#j < #k)) ∧ (#k < #i)))"

lemma src_1 [right, sources]:
  all-traces
  "∀ transactionid suci RSC Nonce1 #i.
    (In_PKMF( transactionid, suci, RSC, Nonce1 ) @ #i) ⇒
    (∃ #j.
      (Out_relay( transactionid, suci, RSC, Nonce1 ) @ #j) ∧ (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ transactionid suci RSC Nonce1 #i.
  (In_PKMF( transactionid, suci, RSC, Nonce1 ) @ #i)
 ∧
  ∀ #j.
   (Out_relay( transactionid, suci, RSC, Nonce1 ) @ #j) ⇒ ¬(#j < #i)"
*/
by sorry

lemma src_1 [left, sources]:
  all-traces
  "∀ transactionid suci RSC Nonce1 #i.
    (In_PKMF( transactionid, suci, RSC, Nonce1 ) @ #i) ⇒
    (∃ #j.
      (Out_relay( transactionid, suci, RSC, Nonce1 ) @ #j) ∧ (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ transactionid suci RSC Nonce1 #i.
  (In_PKMF( transactionid, suci, RSC, Nonce1 ) @ #i)
 ∧
  ∀ #j.
   (Out_relay( transactionid, suci, RSC, Nonce1 ) @ #j) ⇒ ¬(#j < #i)"
*/
by sorry

lemma src_2 [right, sources]:
  all-traces
  "∀ K_NRp Nonce2 UP_PRUKID RAND AUTN P_TID GPI_MAC #i.
    (In_PKMF2( <K_NRp, Nonce2, UP_PRUKID, RAND, AUTN, P_TID, GPI_MAC>
     ) @ #i) ⇒
    (∃ #j.
      (Out_HN( <K_NRp, Nonce2, UP_PRUKID, RAND, AUTN, P_TID, GPI_MAC>
       ) @ #j) ∧
      (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ K_NRp Nonce2 UP_PRUKID RAND AUTN P_TID GPI_MAC #i.
  (In_PKMF2( <K_NRp, Nonce2, UP_PRUKID, RAND, AUTN, P_TID, GPI_MAC>
   ) @ #i)
 ∧
  ∀ #j.
   (Out_HN( <K_NRp, Nonce2, UP_PRUKID, RAND, AUTN, P_TID, GPI_MAC>
    ) @ #j)
  ⇒
   ¬(#j < #i)"
*/
by sorry

lemma src_2 [left, sources]:
  all-traces
  "∀ K_NRp Nonce2 UP_PRUKID RAND AUTN P_TID GPI_MAC #i.
    (In_PKMF2( <K_NRp, Nonce2, UP_PRUKID, RAND, AUTN, P_TID, GPI_MAC>
     ) @ #i) ⇒
    (∃ #j.
      (Out_HN( <K_NRp, Nonce2, UP_PRUKID, RAND, AUTN, P_TID, GPI_MAC>
       ) @ #j) ∧
      (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ K_NRp Nonce2 UP_PRUKID RAND AUTN P_TID GPI_MAC #i.
  (In_PKMF2( <K_NRp, Nonce2, UP_PRUKID, RAND, AUTN, P_TID, GPI_MAC>
   ) @ #i)
 ∧
  ∀ #j.
   (Out_HN( <K_NRp, Nonce2, UP_PRUKID, RAND, AUTN, P_TID, GPI_MAC>
    ) @ #j)
  ⇒
   ¬(#j < #i)"
*/
by sorry

lemma src_3 [right, sources]:
  all-traces
  "∀ K_NRp Nonce2 UP_PRUKID RAND AUTN P_TID GPI_MAC #i.
    (In_relay2( K_NRp, Nonce2, UP_PRUKID, <RAND, AUTN, P_TID, GPI_MAC>
     ) @ #i) ⇒
    (∃ #j.
      (Out_PKMF2( K_NRp, Nonce2, UP_PRUKID, <RAND, AUTN, P_TID, GPI_MAC>
       ) @ #j) ∧
      (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ K_NRp Nonce2 UP_PRUKID RAND AUTN P_TID GPI_MAC #i.
  (In_relay2( K_NRp, Nonce2, UP_PRUKID, <RAND, AUTN, P_TID, GPI_MAC>
   ) @ #i)
 ∧
  ∀ #j.
   (Out_PKMF2( K_NRp, Nonce2, UP_PRUKID, <RAND, AUTN, P_TID, GPI_MAC>
    ) @ #j)
  ⇒
   ¬(#j < #i)"
*/
by sorry

lemma src_3 [left, sources]:
  all-traces
  "∀ K_NRp Nonce2 UP_PRUKID RAND AUTN P_TID GPI_MAC #i.
    (In_relay2( K_NRp, Nonce2, UP_PRUKID, <RAND, AUTN, P_TID, GPI_MAC>
     ) @ #i) ⇒
    (∃ #j.
      (Out_PKMF2( K_NRp, Nonce2, UP_PRUKID, <RAND, AUTN, P_TID, GPI_MAC>
       ) @ #j) ∧
      (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ K_NRp Nonce2 UP_PRUKID RAND AUTN P_TID GPI_MAC #i.
  (In_relay2( K_NRp, Nonce2, UP_PRUKID, <RAND, AUTN, P_TID, GPI_MAC>
   ) @ #i)
 ∧
  ∀ #j.
   (Out_PKMF2( K_NRp, Nonce2, UP_PRUKID, <RAND, AUTN, P_TID, GPI_MAC>
    ) @ #j)
  ⇒
   ¬(#j < #i)"
*/
by sorry

lemma src_4 [right, sources]:
  all-traces
  "∀ idHN suci RSC Nonce1 RAND AUTS #i.
    (In_PKMF5( idHN, suci, RSC, Nonce1, RAND, AUTS ) @ #i) ⇒
    (∃ #j.
      (Out_relay5( idHN, suci, RSC, Nonce1, RAND, AUTS ) @ #j) ∧
      (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ idHN suci RSC Nonce1 RAND AUTS #i.
  (In_PKMF5( idHN, suci, RSC, Nonce1, RAND, AUTS ) @ #i)
 ∧
  ∀ #j.
   (Out_relay5( idHN, suci, RSC, Nonce1, RAND, AUTS ) @ #j)
  ⇒
   ¬(#j < #i)"
*/
by sorry

lemma src_4 [left, sources]:
  all-traces
  "∀ idHN suci RSC Nonce1 RAND AUTS #i.
    (In_PKMF5( idHN, suci, RSC, Nonce1, RAND, AUTS ) @ #i) ⇒
    (∃ #j.
      (Out_relay5( idHN, suci, RSC, Nonce1, RAND, AUTS ) @ #j) ∧
      (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ idHN suci RSC Nonce1 RAND AUTS #i.
  (In_PKMF5( idHN, suci, RSC, Nonce1, RAND, AUTS ) @ #i)
 ∧
  ∀ #j.
   (Out_relay5( idHN, suci, RSC, Nonce1, RAND, AUTS ) @ #j)
  ⇒
   ¬(#j < #i)"
*/
by sorry

lemma sqn_ue_invariance [right, use_induction, sources]:
  all-traces
  "∀ supi HN Sqn sqn_root count #i.
    (Sqn_UE_Invariance( supi, HN, Sqn, sqn_root, count ) @ #i) ⇒
    ((count+sqn_root) = Sqn)"
/*
guarded formula characterizing all counter-examples:
"∃ supi HN Sqn sqn_root count #i.
  (Sqn_UE_Invariance( supi, HN, Sqn, sqn_root, count ) @ #i)
 ∧
  ¬((count+sqn_root) = Sqn)"
*/
by sorry

lemma sqn_ue_invariance [left, use_induction, sources]:
  all-traces
  "∀ supi HN Sqn sqn_root count #i.
    (Sqn_UE_Invariance( supi, HN, Sqn, sqn_root, count ) @ #i) ⇒
    ((count+sqn_root) = Sqn)"
/*
guarded formula characterizing all counter-examples:
"∃ supi HN Sqn sqn_root count #i.
  (Sqn_UE_Invariance( supi, HN, Sqn, sqn_root, count ) @ #i)
 ∧
  ¬((count+sqn_root) = Sqn)"
*/
by sorry

lemma sqn_HN_invariance [right, use_induction, sources]:
  all-traces
  "∀ HN supi Sqn sqn_root count #i.
    (Sqn_HN_Invariance( HN, supi, Sqn, sqn_root, count ) @ #i) ⇒
    ((count+sqn_root) = Sqn)"
/*
guarded formula characterizing all counter-examples:
"∃ HN supi Sqn sqn_root count #i.
  (Sqn_HN_Invariance( HN, supi, Sqn, sqn_root, count ) @ #i)
 ∧
  ¬((count+sqn_root) = Sqn)"
*/
by sorry

lemma sqn_HN_invariance [left, use_induction, sources]:
  all-traces
  "∀ HN supi Sqn sqn_root count #i.
    (Sqn_HN_Invariance( HN, supi, Sqn, sqn_root, count ) @ #i) ⇒
    ((count+sqn_root) = Sqn)"
/*
guarded formula characterizing all counter-examples:
"∃ HN supi Sqn sqn_root count #i.
  (Sqn_HN_Invariance( HN, supi, Sqn, sqn_root, count ) @ #i)
 ∧
  ¬((count+sqn_root) = Sqn)"
*/
by sorry

lemma sqn_ue_src [right, use_induction, reuse]:
  all-traces
  "∀ supi HN Sqn sqn_root count #i.
    (Sqn_UE_Invariance( supi, HN, Sqn, sqn_root, count ) @ #i) ⇒
    (∃ #j. (Sqn_Create( supi, HN, sqn_root ) @ #j) ∧ (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ supi HN Sqn sqn_root count #i.
  (Sqn_UE_Invariance( supi, HN, Sqn, sqn_root, count ) @ #i)
 ∧
  ∀ #j. (Sqn_Create( supi, HN, sqn_root ) @ #j) ⇒ ¬(#j < #i)"
*/
by sorry

lemma sqn_ue_src [left, use_induction, reuse]:
  all-traces
  "∀ supi HN Sqn sqn_root count #i.
    (Sqn_UE_Invariance( supi, HN, Sqn, sqn_root, count ) @ #i) ⇒
    (∃ #j. (Sqn_Create( supi, HN, sqn_root ) @ #j) ∧ (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ supi HN Sqn sqn_root count #i.
  (Sqn_UE_Invariance( supi, HN, Sqn, sqn_root, count ) @ #i)
 ∧
  ∀ #j. (Sqn_Create( supi, HN, sqn_root ) @ #j) ⇒ ¬(#j < #i)"
*/
by sorry

lemma sqn_HN_src [right, reuse]:
  all-traces
  "∀ HN supi Sqn sqn_root count #i.
    (Sqn_HN_Invariance( HN, supi, Sqn, sqn_root, count ) @ #i) ⇒
    (∃ #j. (Sqn_Create( supi, HN, sqn_root ) @ #j) ∧ (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ HN supi Sqn sqn_root count #i.
  (Sqn_HN_Invariance( HN, supi, Sqn, sqn_root, count ) @ #i)
 ∧
  ∀ #j. (Sqn_Create( supi, HN, sqn_root ) @ #j) ⇒ ¬(#j < #i)"
*/
by sorry

lemma sqn_HN_src [left, reuse]:
  all-traces
  "∀ HN supi Sqn sqn_root count #i.
    (Sqn_HN_Invariance( HN, supi, Sqn, sqn_root, count ) @ #i) ⇒
    (∃ #j. (Sqn_Create( supi, HN, sqn_root ) @ #j) ∧ (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ HN supi Sqn sqn_root count #i.
  (Sqn_HN_Invariance( HN, supi, Sqn, sqn_root, count ) @ #i)
 ∧
  ∀ #j. (Sqn_Create( supi, HN, sqn_root ) @ #j) ⇒ ¬(#j < #i)"
*/
by sorry

lemma sqn_ue_nodecrease [right, use_induction, reuse]:
  all-traces
  "(((∀ supi HN Sqni Sqnj #i #j.
       (((Sqn_UE_Change( supi, HN, Sqnj ) @ #j) ∧
         (Sqn_UE_Change( supi, HN, Sqni ) @ #i)) ∧
        (#i < #j)) ⇒
       (∃ dif. Sqnj = (Sqni+dif))) ∧
     (∀ supi HN Sqni Sqnj #i #j.
       (((Sqn_UE_Change( supi, HN, Sqnj ) @ #j) ∧
         (Sqn_UE_Nochange( supi, HN, Sqni ) @ #i)) ∧
        (#i < #j)) ⇒
       (∃ dif. Sqnj = (Sqni+dif)))) ∧
    (∀ supi HN Sqni Sqnj #i #j.
      (((Sqn_UE_Nochange( supi, HN, Sqnj ) @ #j) ∧
        (Sqn_UE_Change( supi, HN, Sqni ) @ #i)) ∧
       (#i < #j)) ⇒
      ((Sqnj = Sqni) ∨ (∃ dif. Sqnj = (Sqni+dif))))) ∧
   (∀ supi HN Sqni Sqnj #i #j.
     (((Sqn_UE_Nochange( supi, HN, Sqnj ) @ #j) ∧
       (Sqn_UE_Nochange( supi, HN, Sqni ) @ #i)) ∧
      (#i < #j)) ⇒
     ((Sqnj = Sqni) ∨ (∃ dif. Sqnj = (Sqni+dif))))"
/*
guarded formula characterizing all counter-examples:
"((∃ supi HN Sqni Sqnj #i #j.
    (Sqn_UE_Change( supi, HN, Sqnj ) @ #j) ∧
    (Sqn_UE_Change( supi, HN, Sqni ) @ #i)
   ∧
    (#i < #j) ∧ (∀ dif. (Sqnj = (Sqni+dif)) ⇒ ⊥)) ∨
  (∃ supi HN Sqni Sqnj #i #j.
    (Sqn_UE_Change( supi, HN, Sqnj ) @ #j) ∧
    (Sqn_UE_Nochange( supi, HN, Sqni ) @ #i)
   ∧
    (#i < #j) ∧ (∀ dif. (Sqnj = (Sqni+dif)) ⇒ ⊥)) ∨
  (∃ supi HN Sqni Sqnj #i #j.
    (Sqn_UE_Nochange( supi, HN, Sqnj ) @ #j) ∧
    (Sqn_UE_Change( supi, HN, Sqni ) @ #i)
   ∧
    (#i < #j) ∧ (¬(Sqnj = Sqni)) ∧ (∀ dif. (Sqnj = (Sqni+dif)) ⇒ ⊥)) ∨
  (∃ supi HN Sqni Sqnj #i #j.
    (Sqn_UE_Nochange( supi, HN, Sqnj ) @ #j) ∧
    (Sqn_UE_Nochange( supi, HN, Sqni ) @ #i)
   ∧
    (#i < #j) ∧ (¬(Sqnj = Sqni)) ∧ (∀ dif. (Sqnj = (Sqni+dif)) ⇒ ⊥)))"
*/
by sorry

lemma sqn_ue_nodecrease [left, use_induction, reuse]:
  all-traces
  "(((∀ supi HN Sqni Sqnj #i #j.
       (((Sqn_UE_Change( supi, HN, Sqnj ) @ #j) ∧
         (Sqn_UE_Change( supi, HN, Sqni ) @ #i)) ∧
        (#i < #j)) ⇒
       (∃ dif. Sqnj = (Sqni+dif))) ∧
     (∀ supi HN Sqni Sqnj #i #j.
       (((Sqn_UE_Change( supi, HN, Sqnj ) @ #j) ∧
         (Sqn_UE_Nochange( supi, HN, Sqni ) @ #i)) ∧
        (#i < #j)) ⇒
       (∃ dif. Sqnj = (Sqni+dif)))) ∧
    (∀ supi HN Sqni Sqnj #i #j.
      (((Sqn_UE_Nochange( supi, HN, Sqnj ) @ #j) ∧
        (Sqn_UE_Change( supi, HN, Sqni ) @ #i)) ∧
       (#i < #j)) ⇒
      ((Sqnj = Sqni) ∨ (∃ dif. Sqnj = (Sqni+dif))))) ∧
   (∀ supi HN Sqni Sqnj #i #j.
     (((Sqn_UE_Nochange( supi, HN, Sqnj ) @ #j) ∧
       (Sqn_UE_Nochange( supi, HN, Sqni ) @ #i)) ∧
      (#i < #j)) ⇒
     ((Sqnj = Sqni) ∨ (∃ dif. Sqnj = (Sqni+dif))))"
/*
guarded formula characterizing all counter-examples:
"((∃ supi HN Sqni Sqnj #i #j.
    (Sqn_UE_Change( supi, HN, Sqnj ) @ #j) ∧
    (Sqn_UE_Change( supi, HN, Sqni ) @ #i)
   ∧
    (#i < #j) ∧ (∀ dif. (Sqnj = (Sqni+dif)) ⇒ ⊥)) ∨
  (∃ supi HN Sqni Sqnj #i #j.
    (Sqn_UE_Change( supi, HN, Sqnj ) @ #j) ∧
    (Sqn_UE_Nochange( supi, HN, Sqni ) @ #i)
   ∧
    (#i < #j) ∧ (∀ dif. (Sqnj = (Sqni+dif)) ⇒ ⊥)) ∨
  (∃ supi HN Sqni Sqnj #i #j.
    (Sqn_UE_Nochange( supi, HN, Sqnj ) @ #j) ∧
    (Sqn_UE_Change( supi, HN, Sqni ) @ #i)
   ∧
    (#i < #j) ∧ (¬(Sqnj = Sqni)) ∧ (∀ dif. (Sqnj = (Sqni+dif)) ⇒ ⊥)) ∨
  (∃ supi HN Sqni Sqnj #i #j.
    (Sqn_UE_Nochange( supi, HN, Sqnj ) @ #j) ∧
    (Sqn_UE_Nochange( supi, HN, Sqni ) @ #i)
   ∧
    (#i < #j) ∧ (¬(Sqnj = Sqni)) ∧ (∀ dif. (Sqnj = (Sqni+dif)) ⇒ ⊥)))"
*/
by sorry

lemma sqn_ue_unique [right, reuse, hide_lemma=sqn_ue_src,
                     hide_lemma=sqn_HN_src]:
  all-traces
  "∀ supi HN Sqn #i #j.
    ((Sqn_UE_Use( supi, HN, Sqn ) @ #i) ∧
     (Sqn_UE_Use( supi, HN, Sqn ) @ #j)) ⇒
    (#i = #j)"
/*
guarded formula characterizing all counter-examples:
"∃ supi HN Sqn #i #j.
  (Sqn_UE_Use( supi, HN, Sqn ) @ #i) ∧
  (Sqn_UE_Use( supi, HN, Sqn ) @ #j)
 ∧
  ¬(#i = #j)"
*/
by sorry

lemma sqn_ue_unique [left, reuse, hide_lemma=sqn_ue_src,
                     hide_lemma=sqn_HN_src]:
  all-traces
  "∀ supi HN Sqn #i #j.
    ((Sqn_UE_Use( supi, HN, Sqn ) @ #i) ∧
     (Sqn_UE_Use( supi, HN, Sqn ) @ #j)) ⇒
    (#i = #j)"
/*
guarded formula characterizing all counter-examples:
"∃ supi HN Sqn #i #j.
  (Sqn_UE_Use( supi, HN, Sqn ) @ #i) ∧
  (Sqn_UE_Use( supi, HN, Sqn ) @ #j)
 ∧
  ¬(#i = #j)"
*/
by sorry

lemma executability_honest [right]:
  exists-trace
  "∃ #i.
    (((((((((Remote_EndConf( ) @ #i) ∧
            (¬(∃ X data #r. Rev( X, data ) @ #r))) ∧
           (∀ HN1 HN2 #j #k.
             ((HomeNet( HN1 ) @ #j) ∧ (HomeNet( HN2 ) @ #k)) ⇒ (#j = #k))) ∧
          (∀ S1 S2 HN1 HN2 #j #k.
            ((Subscribe( S1, HN1 ) @ #j) ∧ (Subscribe( S2, HN2 ) @ #k)) ⇒
            (#j = #k))) ∧
         (∀ PKMF1 PKMF2 #j #k.
           ((PKMF_relay( PKMF1 ) @ #j) ∧ (PKMF_relay( PKMF2 ) @ #k)) ⇒
           (#j = #k))) ∧
        (∀ relay1 relay2 #j #k.
          ((CreateRelay( relay1 ) @ #j) ∧ (CreateRelay( relay2 ) @ #k)) ⇒
          (#j = #k))) ∧
       (∀ PKMFID1 PKMFID2 #j #k.
         ((Start_PKMF_Session( PKMFID1 ) @ #j) ∧
          (Start_PKMF_Session( PKMFID2 ) @ #k)) ⇒
         (#j = #k))) ∧
      (∀ supi_relay1 supi_relay2 #j #k.
        ((Start_relay_Session( supi_relay1 ) @ #j) ∧
         (Start_relay_Session( supi_relay2 ) @ #k)) ⇒
        (#j = #k))) ∧
     (∀ UE1 UE2 #j #k.
       ((Start_UE_Session( UE1 ) @ #j) ∧ (Start_UE_Session( UE2 ) @ #k)) ⇒
       (#j = #k))) ∧
    (∀ HN1 HN2 #j #k.
      ((Start_HN_Session( HN1 ) @ #j) ∧ (Start_HN_Session( HN2 ) @ #k)) ⇒
      (#j = #k))"
/*
guarded formula characterizing all satisfying traces:
"∃ #i.
  (Remote_EndConf( ) @ #i)
 ∧
  (∀ X data #r. (Rev( X, data ) @ #r) ⇒ ⊥) ∧
  (∀ HN1 HN2 #j #k.
    (HomeNet( HN1 ) @ #j) ∧ (HomeNet( HN2 ) @ #k) ⇒ #j = #k) ∧
  (∀ S1 S2 HN1 HN2 #j #k.
    (Subscribe( S1, HN1 ) @ #j) ∧ (Subscribe( S2, HN2 ) @ #k)
   ⇒
    #j = #k) ∧
  (∀ PKMF1 PKMF2 #j #k.
    (PKMF_relay( PKMF1 ) @ #j) ∧ (PKMF_relay( PKMF2 ) @ #k)
   ⇒
    #j = #k) ∧
  (∀ relay1 relay2 #j #k.
    (CreateRelay( relay1 ) @ #j) ∧ (CreateRelay( relay2 ) @ #k)
   ⇒
    #j = #k) ∧
  (∀ PKMFID1 PKMFID2 #j #k.
    (Start_PKMF_Session( PKMFID1 ) @ #j) ∧
    (Start_PKMF_Session( PKMFID2 ) @ #k)
   ⇒
    #j = #k) ∧
  (∀ supi_relay1 supi_relay2 #j #k.
    (Start_relay_Session( supi_relay1 ) @ #j) ∧
    (Start_relay_Session( supi_relay2 ) @ #k)
   ⇒
    #j = #k) ∧
  (∀ UE1 UE2 #j #k.
    (Start_UE_Session( UE1 ) @ #j) ∧ (Start_UE_Session( UE2 ) @ #k)
   ⇒
    #j = #k) ∧
  (∀ HN1 HN2 #j #k.
    (Start_HN_Session( HN1 ) @ #j) ∧ (Start_HN_Session( HN2 ) @ #k)
   ⇒
    #j = #k)"
*/
by sorry

lemma executability_honest [left]:
  exists-trace
  "∃ #i.
    (((((((((Remote_EndConf( ) @ #i) ∧
            (¬(∃ X data #r. Rev( X, data ) @ #r))) ∧
           (∀ HN1 HN2 #j #k.
             ((HomeNet( HN1 ) @ #j) ∧ (HomeNet( HN2 ) @ #k)) ⇒ (#j = #k))) ∧
          (∀ S1 S2 HN1 HN2 #j #k.
            ((Subscribe( S1, HN1 ) @ #j) ∧ (Subscribe( S2, HN2 ) @ #k)) ⇒
            (#j = #k))) ∧
         (∀ PKMF1 PKMF2 #j #k.
           ((PKMF_relay( PKMF1 ) @ #j) ∧ (PKMF_relay( PKMF2 ) @ #k)) ⇒
           (#j = #k))) ∧
        (∀ relay1 relay2 #j #k.
          ((CreateRelay( relay1 ) @ #j) ∧ (CreateRelay( relay2 ) @ #k)) ⇒
          (#j = #k))) ∧
       (∀ PKMFID1 PKMFID2 #j #k.
         ((Start_PKMF_Session( PKMFID1 ) @ #j) ∧
          (Start_PKMF_Session( PKMFID2 ) @ #k)) ⇒
         (#j = #k))) ∧
      (∀ supi_relay1 supi_relay2 #j #k.
        ((Start_relay_Session( supi_relay1 ) @ #j) ∧
         (Start_relay_Session( supi_relay2 ) @ #k)) ⇒
        (#j = #k))) ∧
     (∀ UE1 UE2 #j #k.
       ((Start_UE_Session( UE1 ) @ #j) ∧ (Start_UE_Session( UE2 ) @ #k)) ⇒
       (#j = #k))) ∧
    (∀ HN1 HN2 #j #k.
      ((Start_HN_Session( HN1 ) @ #j) ∧ (Start_HN_Session( HN2 ) @ #k)) ⇒
      (#j = #k))"
/*
guarded formula characterizing all satisfying traces:
"∃ #i.
  (Remote_EndConf( ) @ #i)
 ∧
  (∀ X data #r. (Rev( X, data ) @ #r) ⇒ ⊥) ∧
  (∀ HN1 HN2 #j #k.
    (HomeNet( HN1 ) @ #j) ∧ (HomeNet( HN2 ) @ #k) ⇒ #j = #k) ∧
  (∀ S1 S2 HN1 HN2 #j #k.
    (Subscribe( S1, HN1 ) @ #j) ∧ (Subscribe( S2, HN2 ) @ #k)
   ⇒
    #j = #k) ∧
  (∀ PKMF1 PKMF2 #j #k.
    (PKMF_relay( PKMF1 ) @ #j) ∧ (PKMF_relay( PKMF2 ) @ #k)
   ⇒
    #j = #k) ∧
  (∀ relay1 relay2 #j #k.
    (CreateRelay( relay1 ) @ #j) ∧ (CreateRelay( relay2 ) @ #k)
   ⇒
    #j = #k) ∧
  (∀ PKMFID1 PKMFID2 #j #k.
    (Start_PKMF_Session( PKMFID1 ) @ #j) ∧
    (Start_PKMF_Session( PKMFID2 ) @ #k)
   ⇒
    #j = #k) ∧
  (∀ supi_relay1 supi_relay2 #j #k.
    (Start_relay_Session( supi_relay1 ) @ #j) ∧
    (Start_relay_Session( supi_relay2 ) @ #k)
   ⇒
    #j = #k) ∧
  (∀ UE1 UE2 #j #k.
    (Start_UE_Session( UE1 ) @ #j) ∧ (Start_UE_Session( UE2 ) @ #k)
   ⇒
    #j = #k) ∧
  (∀ HN1 HN2 #j #k.
    (Start_HN_Session( HN1 ) @ #j) ∧ (Start_HN_Session( HN2 ) @ #k)
   ⇒
    #j = #k)"
*/
by sorry

/* All well-formedness checks were successful. */

diffLemma Observational_equivalence:
rule-equivalence
  case Rule_Destrd_0_adec
  by sorry
next
  case Rule_Destrd_0_fst
  by sorry
next
  case Rule_Destrd_0_sdec
  by sorry
next
  case Rule_Destrd_0_snd
  by sorry
next
  case Rule_Destrd_union
  by sorry
next
  case Rule_Destrd_xor
  by sorry
next
  case Rule_Equality
  by sorry
next
  case Rule_HN_receive_Nausf_UE_PAR_step4
  by sorry
next
  case Rule_HN_receive_authSync_step10b
  by sorry
next
  case Rule_PKMF_receive_Nausf_UE_PAResponse_step5
  by sorry
next
  case Rule_PKMF_receive_relaykeyrequest_step3
  by sorry
next
  case Rule_PKMF_receive_syncFailure_send_authSync_step9b
  by sorry
next
  case Rule_Send
  by sorry
next
  case Rule_add_RSC
  by sorry
next
  case Rule_add_subscription
  by sorry
next
  case Rule_init_PKMF_relay
  by sorry
next
  case Rule_init_Relay
  by sorry
next
  case Rule_init_homeNet
  by sorry
next
  case Rule_receive_secure
  by sorry
next
  case Rule_relay_receive_DSMComplete_step8a
  by sorry
next
  case Rule_relay_receive_relay_auth_request_step6
  by sorry
next
  case Rule_relay_receive_syncFailure_authResp_step8b
  by sorry // removed
next
  case Rule_relay_send_relaykeyrequest_step2
  by sorry
next
  case Rule_reveal_Ltk_DUCK
  by sorry
next
  case Rule_reveal_Ltk_DUIK
  by sorry
next
  case Rule_reveal_Ltk_RSC
  by sorry
next
  case Rule_reveal_Ltk_supi_relay
  by sorry
next
  case Rule_send_secure
  by sorry
next
  case Rule_supi_supply
  by sorry
next
  case Rule_ue_Direct_Security_Mode_Failure_step7b
  backward-search
    case LHS
    step( simplify )
    step( solve( St_1_UE( ~supi_relay, ~supi, ~User_info_remote,
                          ~User_info_relay, ~idHN, ~k, ~sqn_root, ~RSC, ~Nonce1, ~DUCK,
                          ~DUIK, ~SeCap, ~CP_Se_Po, ~UP_Se_Po, ~MSB_KsessID
                 ) ▶₀ #i ) )
      case ue_send_DCR_step1_case_1
      by sorry
    next
      case ue_send_DCR_step1_case_2
      step( solve( Sqn_UE( ~supi, ~idHN, SqnUE, ~sqn_root, count
                   ) ▶₁ #i ) )
        case add_subscription
        by sorry
      next
        case ue_Direct_Security_Mode_Failure_step7b_case_1
        by sorry
      next
        case ue_Direct_Security_Mode_Failure_step7b_case_2
        by step( contradiction /* cyclic */ )
      next
        case ue_receive_DSMCommand_step7a
        step( solve( Sqn_UE( ~supi, ~idHN, (~sqn_root+count), ~sqn_root,
                             count
                     ) ▶₁ #vr.7 ) )
          case add_subscription
          step( solve( !KU( f1(~k, <SqnHN, RAND>) ) @ #vk.28 ) )
            case c_f1
            by sorry
          next
            case relay_receive_relay_auth_request_step6
            step( solve( (#vr = #vr.8)  ∥
                         (∃ #k. (UE_End( ) @ #k) ∧ (#vr < #k) ∧ (#k < #vr.8))  ∥
                         (∃ #k. (UE_End( ) @ #k) ∧ (#vr.8 < #k) ∧ (#k < #vr)) ) )
              case case_2
              step( solve( St_2_UE( ~supi_relay.6, ~supi.3, ~User_info_remote.3,
                                    ~User_info_relay.6, ~idHN.3, ~k.2, ~sqn_root.1, ~RSC.5,
                                    ~Nonce1.5, ~DUCK.4, ~DUIK.4, ~SeCap.4, ~CP_Se_Po.4, ~UP_Se_Po.2,
                                    ~MSB_KsessID.4, idPKMF.7, UP_PRUK, UP_PRUKID.2, K_NRp,
                                    ~Nonce2.3, K_relay_sess, K_relay_enc, K_relay_int.1, KsessID
                           ) ▶₀ #k.1 ) )
                case ue_receive_DSMCommand_step7a
                by step( contradiction /* cyclic */ )
              qed
            next
              case case_3
              step( solve( St_2_UE( ~supi_relay.6, ~supi.3, ~User_info_remote.3,
                                    ~User_info_relay.6, ~idHN.3, ~k.2, ~sqn_root.1, ~RSC.5,
                                    ~Nonce1.5, ~DUCK.4, ~DUIK.4, ~SeCap.4, ~CP_Se_Po.4, ~UP_Se_Po.2,
                                    ~MSB_KsessID.4, idPKMF.7, UP_PRUK, UP_PRUKID.2, K_NRp,
                                    ~Nonce2.3, K_relay_sess, K_relay_enc, K_relay_int.1, KsessID
                           ) ▶₀ #k.1 ) )
                case ue_receive_DSMCommand_step7a
                step( solve( (∃ #k.
                               (UE_End( ) @ #k) ∧ (#vr.8 < #k) ∧ (#k < #vr))  ∥
                             (∃ #k. (UE_End( ) @ #k) ∧ (#vr < #k) ∧ (#k < #vr.8)) ) )
                  case case_1
                  step( solve( (∃ #k.
                                 (UE_End( ) @ #k) ∧ (#vr < #k) ∧ (#k < #vr.8))  ∥
                               (∃ #k. (UE_End( ) @ #k) ∧ (#vr.8 < #k) ∧ (#k < #vr)) ) )
                    case case_1
                    by step( contradiction /* cyclic */ )
                  next
                    case case_2
                    step( solve( Sqn_HN( ~supi, ~idHN, (~sqn_root+count), ~sqn_root,
                                         count
                                 ) ▶₄ #j.1 ) )
                      case HN_receive_Nausf_UE_PAR_step4
                      by sorry
                    next
                      case HN_receive_authSync_step10b
                      by sorry
                    next
                      case add_subscription
                      step( solve( RcvS( ~cid, ~idHN.1, ~idPKMF,
                                         <'ProseAuthenticateResponse', 
                                          KDF(KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                  <~RAND, ~supi, ~idHN>),
                                              <~RSC.2, Nonce1.2, ~Nonce2.1>), 
                                          ~Nonce2.1, ~n, ~RAND, 
                                          <(f5(~k, ~RAND)⊕('1'+'1'+~sqn_root)), 
                                           f1(~k, <('1'+'1'+~sqn_root), ~RAND>)>, 
                                          senc(~n,
                                               KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                   <~RAND, ~supi, 'GPI_confidentiality'>)), 
                                          Int(KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                  <~RAND, ~supi, 'GPI_integrity'>),
                                              <~RAND, 
                                               <(f5(~k, ~RAND)⊕('1'+'1'+~sqn_root)), 
                                                f1(~k, <('1'+'1'+~sqn_root), ~RAND>)>, 
                                               senc(~n,
                                                    KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                        <~RAND, ~supi, 'GPI_confidentiality'>))
                                              >)
                                         >
                                   ) ▶₁ #j ) )
                        case receive_secure
                        step( solve( RcvS( ~transactionid.1, ~idPKMF.5, ~supi_relay.5,
                                           <'relay_auth_request', 
                                            KDF(KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                    <~RAND, ~supi, ~idHN>),
                                                <~RSC.2, Nonce1.2, ~Nonce2.1>), 
                                            ~Nonce2.1, ~n, ~RAND, 
                                            <(f5(~k, ~RAND)⊕('1'+'1'+~sqn_root)), 
                                             f1(~k, <('1'+'1'+~sqn_root), ~RAND>)>, 
                                            senc(~n,
                                                 KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                     <~RAND, ~supi, 'GPI_confidentiality'>)), 
                                            Int(KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                    <~RAND, ~supi, 'GPI_integrity'>),
                                                <~RAND, 
                                                 <(f5(~k, ~RAND)⊕('1'+'1'+~sqn_root)), 
                                                  f1(~k, <('1'+'1'+~sqn_root), ~RAND>)>, 
                                                 senc(~n,
                                                      KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                          <~RAND, ~supi, 'GPI_confidentiality'>))
                                                >)
                                           >
                                     ) ▶₂ #vr.13 ) )
                          case receive_secure
                          step( solve( RcvS( ~cid.1, ~idHN.1, ~idPKMF.5,
                                             <'ProseAuthenticateResponse', 
                                              KDF(KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                      <~RAND, ~supi, ~idHN>),
                                                  <~RSC.2, Nonce1.2, ~Nonce2.1>), 
                                              ~Nonce2.1, ~n, ~RAND, 
                                              <(f5(~k, ~RAND)⊕('1'+'1'+~sqn_root)), 
                                               f1(~k, <('1'+'1'+~sqn_root), ~RAND>)>, 
                                              senc(~n,
                                                   KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                       <~RAND, ~supi, 'GPI_confidentiality'>)), 
                                              Int(KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                      <~RAND, ~supi, 'GPI_integrity'>),
                                                  <~RAND, 
                                                   <(f5(~k, ~RAND)⊕('1'+'1'+~sqn_root)), 
                                                    f1(~k, <('1'+'1'+~sqn_root), ~RAND>)>, 
                                                   senc(~n,
                                                        KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                            <~RAND, ~supi, 'GPI_confidentiality'>))
                                                  >)
                                             >
                                       ) ▶₁ #vr.38 ) )
                            case receive_secure
                            step( solve( !KU( senc(<~User_info_relay.3, 
                                                    Int(KDF(KDF(KDF(KDF(<f3(~k, RAND.1), 
                                                                         f4(~k, RAND.1)>,
                                                                        <RAND.1, ~supi, ~idHN>),
                                                                    <~RSC.3, ~Nonce1.3, ~Nonce2.2>),
                                                                <~Nonce1.3, ~Nonce2.2>),
                                                            <'0x01', 'integrity_algorithm'>),
                                                        <~User_info_relay.3, ~LSB_KsessID.2, 
                                                         ~MSB_KsessID.1>)
                                                   >,
                                                   KDF(KDF(KDF(KDF(<f3(~k, RAND.1), f4(~k, RAND.1)>,
                                                                   <RAND.1, ~supi, ~idHN>),
                                                               <~RSC.3, ~Nonce1.3, ~Nonce2.2>),
                                                           <~Nonce1.3, ~Nonce2.2>),
                                                       <'0x00', 'confidential_algorithm'>))
                                         ) @ #vk.67 ) )
                              case c_senc
                              by sorry
                            next
                              case relay_receive_DSMComplete_step8a
                              step( solve( Sqn_HN( ~supi, ~idHN, (~sqn_root+count), ~sqn_root,
                                                   count
                                           ) ▶₄ #j.4 ) )
                                case HN_receive_Nausf_UE_PAR_step4
                                by sorry
                              next
                                case HN_receive_authSync_step10b
                                by sorry
                              next
                                case add_subscription
                                step( solve( RcvS( ~cid.1, ~idHN.1, ~idPKMF.3,
                                                   <'ProseAuthenticateResponse', 
                                                    KDF(KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                            <~RAND, ~supi, ~idHN>),
                                                        <~RSC.2, ~Nonce1.2, ~Nonce2.1>), 
                                                    ~Nonce2.1, ~n, ~RAND, 
                                                    <(f5(~k, ~RAND)⊕('1'+'1'+~sqn_root)), 
                                                     f1(~k, <('1'+'1'+~sqn_root), ~RAND>)>, 
                                                    senc(~n,
                                                         KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                             <~RAND, ~supi, 'GPI_confidentiality'
                                                             >)), 
                                                    Int(KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                            <~RAND, ~supi, 'GPI_integrity'>),
                                                        <~RAND, 
                                                         <(f5(~k, ~RAND)⊕('1'+'1'+~sqn_root)), 
                                                          f1(~k, <('1'+'1'+~sqn_root), ~RAND>)>, 
                                                         senc(~n,
                                                              KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                                  <~RAND, ~supi, 
                                                                   'GPI_confidentiality'>))
                                                        >)
                                                   >
                                             ) ▶₁ #j.3 ) )
                                  case receive_secure
                                  step( solve( RcvS( ~transactionid.1, ~idPKMF.3, ~supi_relay.3,
                                                     <'relay_auth_request', 
                                                      KDF(KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                              <~RAND, ~supi, ~idHN>),
                                                          <~RSC.2, ~Nonce1.2, ~Nonce2.1>), 
                                                      ~Nonce2.1, ~n, ~RAND, 
                                                      <(f5(~k, ~RAND)⊕('1'+'1'+~sqn_root)), 
                                                       f1(~k, <('1'+'1'+~sqn_root), ~RAND>)>, 
                                                      senc(~n,
                                                           KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                               <~RAND, ~supi, 'GPI_confidentiality'
                                                               >)), 
                                                      Int(KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                              <~RAND, ~supi, 'GPI_integrity'>),
                                                          <~RAND, 
                                                           <(f5(~k, ~RAND)⊕('1'+'1'+~sqn_root)), 
                                                            f1(~k, <('1'+'1'+~sqn_root), ~RAND>)>, 
                                                           senc(~n,
                                                                KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                                    <~RAND, ~supi, 
                                                                     'GPI_confidentiality'>))
                                                          >)
                                                     >
                                               ) ▶₂ #vr.35 ) )
                                    case receive_secure
                                    step( solve( RcvS( ~cid.1, ~idHN.1, ~idPKMF.3,
                                                       <'ProseAuthenticateResponse', 
                                                        KDF(KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                                <~RAND, ~supi, ~idHN>),
                                                            <~RSC.2, ~Nonce1.2, ~Nonce2.1>), 
                                                        ~Nonce2.1, ~n, ~RAND, 
                                                        <(f5(~k, ~RAND)⊕('1'+'1'+~sqn_root)), 
                                                         f1(~k, <('1'+'1'+~sqn_root), ~RAND>)>, 
                                                        senc(~n,
                                                             KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                                 <~RAND, ~supi, 
                                                                  'GPI_confidentiality'>)), 
                                                        Int(KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                                <~RAND, ~supi, 'GPI_integrity'>),
                                                            <~RAND, 
                                                             <(f5(~k, ~RAND)⊕('1'+'1'+~sqn_root)), 
                                                              f1(~k, <('1'+'1'+~sqn_root), ~RAND>)
                                                             >, 
                                                             senc(~n,
                                                                  KDF(<f3(~k, ~RAND), f4(~k, ~RAND)
                                                                      >,
                                                                      <~RAND, ~supi, 
                                                                       'GPI_confidentiality'>))
                                                            >)
                                                       >
                                                 ) ▶₁ #vr.40 ) )
                                      case receive_secure
                                      step( solve( RcvS( ~transactionid, ~supi_relay.1, ~idPKMF,
                                                         <'relaykeyrequest', ~transactionid, 
                                                          <aenc(<~supi.1, ~R>, pk_HN), ~idHN>, 
                                                          ~RSC.1, ~Nonce1.1>
                                                   ) ▶₃ #vr.24 ) )
                                        case receive_secure
                                        step( solve( RcvS( ~cid, ~idPKMF, ~idHN,
                                                           <'ProseAuthenticateRequest', 
                                                            <aenc(<~supi, ~R.2>, pk(~sk_HN)), ~idHN
                                                            >, 
                                                            ~RSC.2, ~Nonce1.1>
                                                     ) ▶₁ #j.1 ) )
                                          case receive_secure
                                          step( solve( !KU( senc(UP_PRUKID,
                                                                 KDF(<f3(~k, ~RAND), f4(~k, ~RAND)>,
                                                                     <~RAND, ~supi, 
                                                                      'GPI_confidentiality'>))
                                                       ) @ #vk.44 ) )
                                            case c_senc
                                            by sorry
                                          next
                                            case relay_receive_relay_auth_request_step6
                                            step( solve( RcvS( ~cid.1, ~idHN.2, ~idPKMF.4,
                                                               <'ProseAuthenticateResponse', 
                                                                KDF(KDF(<f3(~k, ~RAND), 
                                                                         f4(~k, ~RAND)>,
                                                                        <~RAND, ~supi, ~idHN>),
                                                                    <~RSC.1, ~Nonce1.1, ~Nonce2.1
                                                                    >), 
                                                                ~Nonce2.1, ~n, ~RAND, 
                                                                <
                                                                 (f5(~k, ~RAND)⊕('1'+'1'+~sqn_root)
                                                                 ), 
                                                                 f1(~k,
                                                                    <('1'+'1'+~sqn_root), ~RAND>)
                                                                >, 
                                                                senc(~n,
                                                                     KDF(<f3(~k, ~RAND), 
                                                                          f4(~k, ~RAND)>,
                                                                         <~RAND, ~supi, 
                                                                          'GPI_confidentiality'>)), 
                                                                Int(KDF(<f3(~k, ~RAND), 
                                                                         f4(~k, ~RAND)>,
                                                                        <~RAND, ~supi, 
                                                                         'GPI_integrity'>),
                                                                    <~RAND, 
                                                                     <
                                                                      (f5(~k, ~RAND)⊕
                                                                       ('1'+'1'+~sqn_root)), 
                                                                      f1(~k,
                                                                         <('1'+'1'+~sqn_root), ~RAND
                                                                         >)
                                                                     >, 
                                                                     senc(~n,
                                                                          KDF(<f3(~k, ~RAND), 
                                                                               f4(~k, ~RAND)>,
                                                                              <~RAND, ~supi, 
                                                                               'GPI_confidentiality'
                                                                              >))
                                                                    >)
                                                               >
                                                         ) ▶₁ #j.3 ) )
                                              case receive_secure
                                              step( solve( RcvS( ~transactionid.1, ~idPKMF.3,
                                                                 ~supi_relay.3,
                                                                 <'relay_auth_request', 
                                                                  KDF(KDF(<f3(~k, ~RAND), 
                                                                           f4(~k, ~RAND)>,
                                                                          <~RAND, ~supi, ~idHN>),
                                                                      <~RSC.1, ~Nonce1.1, ~Nonce2.1
                                                                      >), 
                                                                  ~Nonce2.1, ~n, ~RAND, 
                                                                  <
                                                                   (f5(~k, ~RAND)⊕
                                                                    ('1'+'1'+~sqn_root)), 
                                                                   f1(~k,
                                                                      <('1'+'1'+~sqn_root), ~RAND>)
                                                                  >, 
                                                                  senc(~n,
                                                                       KDF(<f3(~k, ~RAND), 
                                                                            f4(~k, ~RAND)>,
                                                                           <~RAND, ~supi, 
                                                                            'GPI_confidentiality'
                                                                           >)), 
                                                                  Int(KDF(<f3(~k, ~RAND), 
                                                                           f4(~k, ~RAND)>,
                                                                          <~RAND, ~supi, 
                                                                           'GPI_integrity'>),
                                                                      <~RAND, 
                                                                       <
                                                                        (f5(~k, ~RAND)⊕
                                                                         ('1'+'1'+~sqn_root)), 
                                                                        f1(~k,
                                                                           <('1'+'1'+~sqn_root), 
                                                                            ~RAND>)
                                                                       >, 
                                                                       senc(~n,
                                                                            KDF(<f3(~k, ~RAND), 
                                                                                 f4(~k, ~RAND)>,
                                                                                <~RAND, ~supi, 
                                                                                 'GPI_confidentiality'
                                                                                >))
                                                                      >)
                                                                 >
                                                           ) ▶₂ #vr.36 ) )
                                                case receive_secure
                                                step( solve( RcvS( ~cid.1, ~idHN.1, ~idPKMF.3,
                                                                   <'ProseAuthenticateResponse', 
                                                                    KDF(KDF(<f3(~k, ~RAND), 
                                                                             f4(~k, ~RAND)>,
                                                                            <~RAND, ~supi, ~idHN>),
                                                                        <~RSC.1, ~Nonce1.1, 
                                                                         ~Nonce2.1>), 
                                                                    ~Nonce2.1, ~n, ~RAND, 
                                                                    <
                                                                     (f5(~k, ~RAND)⊕
                                                                      ('1'+'1'+~sqn_root)), 
                                                                     f1(~k,
                                                                        <('1'+'1'+~sqn_root), ~RAND
                                                                        >)
                                                                    >, 
                                                                    senc(~n,
                                                                         KDF(<f3(~k, ~RAND), 
                                                                              f4(~k, ~RAND)>,
                                                                             <~RAND, ~supi, 
                                                                              'GPI_confidentiality'
                                                                             >)), 
                                                                    Int(KDF(<f3(~k, ~RAND), 
                                                                             f4(~k, ~RAND)>,
                                                                            <~RAND, ~supi, 
                                                                             'GPI_integrity'>),
                                                                        <~RAND, 
                                                                         <
                                                                          (f5(~k, ~RAND)⊕
                                                                           ('1'+'1'+~sqn_root)), 
                                                                          f1(~k,
                                                                             <('1'+'1'+~sqn_root), 
                                                                              ~RAND>)
                                                                         >, 
                                                                         senc(~n,
                                                                              KDF(<f3(~k, ~RAND), 
                                                                                   f4(~k, ~RAND)>,
                                                                                  <~RAND, ~supi, 
                                                                                   'GPI_confidentiality'
                                                                                  >))
                                                                        >)
                                                                   >
                                                             ) ▶₁ #vr.52 ) )
                                                  case receive_secure
                                                  step( solve( !KU( ~User_info_relay.1
                                                               ) @ #vk.61 ) )
                                                    case ue_send_DCR_step1_case_1
                                                    step( solve( !KU( senc(<~UP_Se_Po.2, 
                                                                            Int(KDF(KDF(KDF(KDF(<
                                                                                                 f3(~k,
                                                                                                    ~RAND), 
                                                                                                 f4(~k,
                                                                                                    ~RAND)
                                                                                                >,
                                                                                                <
                                                                                                 ~RAND, 
                                                                                                 ~supi, 
                                                                                                 ~idHN
                                                                                                >),
                                                                                            <
                                                                                             ~RSC.1, 
                                                                                             ~Nonce1.1, 
                                                                                             ~Nonce2.1
                                                                                            >),
                                                                                        <~Nonce1.1, 
                                                                                         ~Nonce2.1
                                                                                        >),
                                                                                    <'0x01', 
                                                                                     'integrity_algorithm'
                                                                                    >),
                                                                                <~UP_Se_Po.2, 
                                                                                 ~LSB_KsessID.1, 
                                                                                 ~MSB_KsessID.1>)
                                                                           >,
                                                                           KDF(KDF(KDF(KDF(<
                                                                                            f3(~k,
                                                                                               ~RAND), 
                                                                                            f4(~k,
                                                                                               ~RAND)
                                                                                           >,
                                                                                           <~RAND, 
                                                                                            ~supi, 
                                                                                            ~idHN>),
                                                                                       <~RSC.1, 
                                                                                        ~Nonce1.1, 
                                                                                        ~Nonce2.1>),
                                                                                   <~Nonce1.1, 
                                                                                    ~Nonce2.1>),
                                                                               <'0x00', 
                                                                                'confidential_algorithm'
                                                                               >))
                                                                 ) @ #vk.70 ) )
                                                      case c_senc
                                                      by sorry
                                                    next
                                                      case relay_receive_DSMComplete_step8a
                                                      by step( contradiction /* cyclic */ )
                                                    next
                                                      case ue_receive_DSMCommand_step7a
                                                      step( solve( !KU( KDF(KDF(KDF(KDF(KDF(<
                                                                                             f3(~k,
                                                                                                ~RAND), 
                                                                                             f4(~k,
                                                                                                ~RAND)
                                                                                            >,
                                                                                            <~RAND, 
                                                                                             ~supi, 
                                                                                             ~idHN
                                                                                            >),
                                                                                        <~RSC.1, 
                                                                                         ~Nonce1.1, 
                                                                                         ~Nonce2.1
                                                                                        >),
                                                                                    <~Nonce1.1, 
                                                                                     ~Nonce2.1>),
                                                                                <'0x01', 
                                                                                 'integrity_algorithm'
                                                                                >),
                                                                            <~CP_Se_Po.2, 
                                                                             ~Nonce2.1, ~SeCap.2, 
                                                                             ~LSB_KsessID.1, ~RAND, 
                                                                             <
                                                                              (f5(~k, ~RAND)⊕
                                                                               ('1'+~sqn_root+dif)
                                                                              ), 
                                                                              f1(~k,
                                                                                 <
                                                                                  ('1'+~sqn_root+dif
                                                                                  ), 
                                                                                  ~RAND>)
                                                                             >, 
                                                                             senc(UP_PRUKID,
                                                                                  KDF(<
                                                                                       f3(~k,
                                                                                          ~RAND), 
                                                                                       f4(~k, ~RAND)
                                                                                      >,
                                                                                      <~RAND, 
                                                                                       ~supi, 
                                                                                       'GPI_confidentiality'
                                                                                      >)), 
                                                                             Int(KDF(<
                                                                                      f3(~k,
                                                                                         ~RAND), 
                                                                                      f4(~k, ~RAND)
                                                                                     >,
                                                                                     <~RAND, ~supi, 
                                                                                      'GPI_integrity'
                                                                                     >),
                                                                                 <~RAND, 
                                                                                  <
                                                                                   (f5(~k, ~RAND)⊕
                                                                                    ('1'+~sqn_root+
                                                                                     dif)
                                                                                   ), 
                                                                                   f1(~k,
                                                                                      <
                                                                                       ('1'+
                                                                                        ~sqn_root+
                                                                                        dif), 
                                                                                       ~RAND>)
                                                                                  >, 
                                                                                  senc(UP_PRUKID,
                                                                                       KDF(<
                                                                                            f3(~k,
                                                                                               ~RAND), 
                                                                                            f4(~k,
                                                                                               ~RAND)
                                                                                           >,
                                                                                           <~RAND, 
                                                                                            ~supi, 
                                                                                            'GPI_confidentiality'
                                                                                           >))
                                                                                 >)
                                                                            >)
                                                                   ) @ #vk.57 ) )
                                                        case c_KDF
                                                        by sorry
                                                      next
                                                        case relay_receive_relay_auth_request_step6
                                                        step( solve( RcvS( ~cid.1, ~idHN.1,
                                                                           ~idPKMF.3,
                                                                           <
                                                                            'ProseAuthenticateResponse', 
                                                                            KDF(KDF(<f3(~k, ~RAND), 
                                                                                     f4(~k, ~RAND)>,
                                                                                    <~RAND, ~supi, 
                                                                                     ~idHN>),
                                                                                <~RSC.1, ~Nonce1.1, 
                                                                                 ~Nonce2.1>), 
                                                                            ~Nonce2.1, ~n, ~RAND, 
                                                                            <
                                                                             (f5(~k, ~RAND)⊕
                                                                              ('1'+'1'+~sqn_root)), 
                                                                             f1(~k,
                                                                                <
                                                                                 ('1'+'1'+~sqn_root
                                                                                 ), 
                                                                                 ~RAND>)
                                                                            >, 
                                                                            senc(~n,
                                                                                 KDF(<
                                                                                      f3(~k,
                                                                                         ~RAND), 
                                                                                      f4(~k, ~RAND)
                                                                                     >,
                                                                                     <~RAND, ~supi, 
                                                                                      'GPI_confidentiality'
                                                                                     >)), 
                                                                            Int(KDF(<f3(~k, ~RAND), 
                                                                                     f4(~k, ~RAND)>,
                                                                                    <~RAND, ~supi, 
                                                                                     'GPI_integrity'
                                                                                    >),
                                                                                <~RAND, 
                                                                                 <
                                                                                  (f5(~k, ~RAND)⊕
                                                                                   ('1'+'1'+
                                                                                    ~sqn_root)
                                                                                  ), 
                                                                                  f1(~k,
                                                                                     <
                                                                                      ('1'+'1'+
                                                                                       ~sqn_root), 
                                                                                      ~RAND>)
                                                                                 >, 
                                                                                 senc(~n,
                                                                                      KDF(<
                                                                                           f3(~k,
                                                                                              ~RAND), 
                                                                                           f4(~k,
                                                                                              ~RAND)
                                                                                          >,
                                                                                          <~RAND, 
                                                                                           ~supi, 
                                                                                           'GPI_confidentiality'
                                                                                          >))
                                                                                >)
                                                                           >
                                                                     ) ▶₁ #j.3 ) )
                                                          case receive_secure
                                                          step( solve( !KU( aenc(<~supi, ~R>,
                                                                                 pk(~sk_HN))
                                                                       ) @ #vk.51 ) )
                                                            case c_aenc
                                                            by sorry
                                                          next
                                                            case ue_send_DCR_step1_case_1
                                                            step( solve( !KU( KDF(~DUIK.1,
                                                                                  <
                                                                                   <
                                                                                    aenc(<~supi, ~R
                                                                                         >,
                                                                                         pk(~sk_HN)), 
                                                                                    ~idHN>, 
                                                                                   ~User_info_remote.1, 
                                                                                   ~User_info_relay.1, 
                                                                                   (~RSC.1⊕
                                                                                    KDF(~DUCK.1,
                                                                                        <~Nonce1.1, 
                                                                                         ~RSC.1>)
                                                                                   ), 
                                                                                   ~Nonce1.1, 
                                                                                   ~SeCap.1, 
                                                                                   ~CP_Se_Po.1, 
                                                                                   ~MSB_KsessID.1>)
                                                                         ) @ #vk.57 ) )
                                                              case c_KDF
                                                              step( solve( !KU( ~DUIK.1
                                                                           ) @ #vk.67 ) )
                                                                case reveal_Ltk_DUIK_case_1
                                                                by sorry // removed
                                                              next
                                                                case reveal_Ltk_DUIK_case_2
                                                                by sorry // removed
                                                              qed
                                                            next
                                                              case ue_send_DCR_step1
                                                              step( solve( !KU( KDF(K_relay_int,
                                                                                    <~CP_Se_Po, 
                                                                                     ~Nonce2, 
                                                                                     ~SeCap, 
                                                                                     ~LSB_KsessID, 
                                                                                     ~RAND, 
                                                                                     <
                                                                                      (
                                                                                       f5(~k,
                                                                                          ~RAND)⊕
                                                                                       ('1'+'1'+
                                                                                        ~sqn_root)
                                                                                      ), 
                                                                                      f1(~k,
                                                                                         <
                                                                                          ('1'+'1'+
                                                                                           ~sqn_root
                                                                                          ), 
                                                                                          ~RAND>)
                                                                                     >, 
                                                                                     senc(~n,
                                                                                          KDF(<
                                                                                               f3(~k,
                                                                                                  ~RAND), 
                                                                                               f4(~k,
                                                                                                  ~RAND)
                                                                                              >,
                                                                                              <
                                                                                               ~RAND, 
                                                                                               ~supi, 
                                                                                               'GPI_confidentiality'
                                                                                              >)), 
                                                                                     Int(KDF(<
                                                                                              f3(~k,
                                                                                                 ~RAND), 
                                                                                              f4(~k,
                                                                                                 ~RAND)
                                                                                             >,
                                                                                             <
                                                                                              ~RAND, 
                                                                                              ~supi, 
                                                                                              'GPI_integrity'
                                                                                             >),
                                                                                         <~RAND, 
                                                                                          <
                                                                                           (
                                                                                            f5(~k,
                                                                                               ~RAND)⊕
                                                                                            ('1'+
                                                                                             '1'+
                                                                                             ~sqn_root
                                                                                            )
                                                                                           ), 
                                                                                           f1(~k,
                                                                                              <
                                                                                               ('1'+
                                                                                                '1'+
                                                                                                ~sqn_root
                                                                                               ), 
                                                                                               ~RAND
                                                                                              >)
                                                                                          >, 
                                                                                          senc(~n,
                                                                                               KDF(<
                                                                                                    f3(~k,
                                                                                                       ~RAND), 
                                                                                                    f4(~k,
                                                                                                       ~RAND)
                                                                                                   >,
                                                                                                   <
                                                                                                    ~RAND, 
                                                                                                    ~supi, 
                                                                                                    'GPI_confidentiality'
                                                                                                   >))
                                                                                         >)
                                                                                    >)
                                                                           ) @ #vk.47 ) )
                                                                case c_KDF
                                                                step( solve( !KU( Int(KDF(<
                                                                                           f3(~k,
                                                                                              ~RAND), 
                                                                                           f4(~k,
                                                                                              ~RAND)
                                                                                          >,
                                                                                          <~RAND, 
                                                                                           ~supi, 
                                                                                           'GPI_integrity'
                                                                                          >),
                                                                                      <~RAND, 
                                                                                       <
                                                                                        (
                                                                                         f5(~k,
                                                                                            ~RAND)⊕
                                                                                         ('1'+'1'+
                                                                                          ~sqn_root)
                                                                                        ), 
                                                                                        f1(~k,
                                                                                           <
                                                                                            ('1'+
                                                                                             '1'+
                                                                                             ~sqn_root
                                                                                            ), 
                                                                                            ~RAND>)
                                                                                       >, 
                                                                                       senc(~n,
                                                                                            KDF(<
                                                                                                 f3(~k,
                                                                                                    ~RAND), 
                                                                                                 f4(~k,
                                                                                                    ~RAND)
                                                                                                >,
                                                                                                <
                                                                                                 ~RAND, 
                                                                                                 ~supi, 
                                                                                                 'GPI_confidentiality'
                                                                                                >))
                                                                                      >)
                                                                             ) @ #vk.51 ) )
                                                                  case c_Int
                                                                  by sorry
                                                                next
                                                                  case relay_receive_relay_auth_request_step6
                                                                  step( solve( RcvS( ~cid.1,
                                                                                     ~idHN.2,
                                                                                     ~idPKMF.4,
                                                                                     <
                                                                                      'ProseAuthenticateResponse', 
                                                                                      KDF(KDF(<
                                                                                               f3(~k,
                                                                                                  ~RAND), 
                                                                                               f4(~k,
                                                                                                  ~RAND)
                                                                                              >,
                                                                                              <
                                                                                               ~RAND, 
                                                                                               ~supi, 
                                                                                               ~idHN
                                                                                              >),
                                                                                          <~RSC.1, 
                                                                                           ~Nonce1.1, 
                                                                                           ~Nonce2.1
                                                                                          >), 
                                                                                      ~Nonce2.1, 
                                                                                      ~n, ~RAND, 
                                                                                      <
                                                                                       (
                                                                                        f5(~k,
                                                                                           ~RAND)⊕
                                                                                        ('1'+'1'+
                                                                                         ~sqn_root)
                                                                                       ), 
                                                                                       f1(~k,
                                                                                          <
                                                                                           ('1'+'1'+
                                                                                            ~sqn_root
                                                                                           ), 
                                                                                           ~RAND>)
                                                                                      >, 
                                                                                      senc(~n,
                                                                                           KDF(<
                                                                                                f3(~k,
                                                                                                   ~RAND), 
                                                                                                f4(~k,
                                                                                                   ~RAND)
                                                                                               >,
                                                                                               <
                                                                                                ~RAND, 
                                                                                                ~supi, 
                                                                                                'GPI_confidentiality'
                                                                                               >)), 
                                                                                      Int(KDF(<
                                                                                               f3(~k,
                                                                                                  ~RAND), 
                                                                                               f4(~k,
                                                                                                  ~RAND)
                                                                                              >,
                                                                                              <
                                                                                               ~RAND, 
                                                                                               ~supi, 
                                                                                               'GPI_integrity'
                                                                                              >),
                                                                                          <~RAND, 
                                                                                           <
                                                                                            (
                                                                                             f5(~k,
                                                                                                ~RAND)⊕
                                                                                             ('1'+
                                                                                              '1'+
                                                                                              ~sqn_root
                                                                                             )
                                                                                            ), 
                                                                                            f1(~k,
                                                                                               <
                                                                                                (
                                                                                                 '1'+
                                                                                                 '1'+
                                                                                                 ~sqn_root
                                                                                                ), 
                                                                                                ~RAND
                                                                                               >)
                                                                                           >, 
                                                                                           senc(~n,
                                                                                                KDF(<
                                                                                                     f3(~k,
                                                                                                        ~RAND), 
                                                                                                     f4(~k,
                                                                                                        ~RAND)
                                                                                                    >,
                                                                                                    <
                                                                                                     ~RAND, 
                                                                                                     ~supi, 
                                                                                                     'GPI_confidentiality'
                                                                                                    >))
                                                                                          >)
                                                                                     >
                                                                               ) ▶₁ #j.3 ) )
                                                                    case receive_secure
                                                                    step( solve( RcvS( ~transactionid.1,
                                                                                       ~idPKMF.3,
                                                                                       ~supi_relay.3,
                                                                                       <
                                                                                        'relay_auth_request', 
                                                                                        KDF(KDF(<
                                                                                                 f3(~k,
                                                                                                    ~RAND), 
                                                                                                 f4(~k,
                                                                                                    ~RAND)
                                                                                                >,
                                                                                                <
                                                                                                 ~RAND, 
                                                                                                 ~supi, 
                                                                                                 ~idHN
                                                                                                >),
                                                                                            <
                                                                                             ~RSC.1, 
                                                                                             ~Nonce1.1, 
                                                                                             ~Nonce2.1
                                                                                            >), 
                                                                                        ~Nonce2.1, 
                                                                                        ~n, ~RAND, 
                                                                                        <
                                                                                         (
                                                                                          f5(~k,
                                                                                             ~RAND)⊕
                                                                                          ('1'+'1'+
                                                                                           ~sqn_root
                                                                                          )
                                                                                         ), 
                                                                                         f1(~k,
                                                                                            <
                                                                                             ('1'+
                                                                                              '1'+
                                                                                              ~sqn_root
                                                                                             ), 
                                                                                             ~RAND>)
                                                                                        >, 
                                                                                        senc(~n,
                                                                                             KDF(<
                                                                                                  f3(~k,
                                                                                                     ~RAND), 
                                                                                                  f4(~k,
                                                                                                     ~RAND)
                                                                                                 >,
                                                                                                 <
                                                                                                  ~RAND, 
                                                                                                  ~supi, 
                                                                                                  'GPI_confidentiality'
                                                                                                 >)), 
                                                                                        Int(KDF(<
                                                                                                 f3(~k,
                                                                                                    ~RAND), 
                                                                                                 f4(~k,
                                                                                                    ~RAND)
                                                                                                >,
                                                                                                <
                                                                                                 ~RAND, 
                                                                                                 ~supi, 
                                                                                                 'GPI_integrity'
                                                                                                >),
                                                                                            <~RAND, 
                                                                                             <
                                                                                              (
                                                                                               f5(~k,
                                                                                                  ~RAND)⊕
                                                                                               ('1'+
                                                                                                '1'+
                                                                                                ~sqn_root
                                                                                               )
                                                                                              ), 
                                                                                              f1(~k,
                                                                                                 <
                                                                                                  (
                                                                                                   '1'+
                                                                                                   '1'+
                                                                                                   ~sqn_root
                                                                                                  ), 
                                                                                                  ~RAND
                                                                                                 >)
                                                                                             >, 
                                                                                             senc(~n,
                                                                                                  KDF(<
                                                                                                       f3(~k,
                                                                                                          ~RAND), 
                                                                                                       f4(~k,
                                                                                                          ~RAND)
                                                                                                      >,
                                                                                                      <
                                                                                                       ~RAND, 
                                                                                                       ~supi, 
                                                                                                       'GPI_confidentiality'
                                                                                                      >))
                                                                                            >)
                                                                                       >
                                                                                 ) ▶₂ #vr.66 ) )
                                                                      case receive_secure
                                                                      step( solve( RcvS( ~cid.1,
                                                                                         ~idHN.1,
                                                                                         ~idPKMF.3,
                                                                                         <
                                                                                          'ProseAuthenticateResponse', 
                                                                                          KDF(KDF(<
                                                                                                   f3(~k,
                                                                                                      ~RAND), 
                                                                                                   f4(~k,
                                                                                                      ~RAND)
                                                                                                  >,
                                                                                                  <
                                                                                                   ~RAND, 
                                                                                                   ~supi, 
                                                                                                   ~idHN
                                                                                                  >),
                                                                                              <
                                                                                               ~RSC.1, 
                                                                                               ~Nonce1.1, 
                                                                                               ~Nonce2.1
                                                                                              >), 
                                                                                          ~Nonce2.1, 
                                                                                          ~n, 
                                                                                          ~RAND, 
                                                                                          <
                                                                                           (
                                                                                            f5(~k,
                                                                                               ~RAND)⊕
                                                                                            ('1'+
                                                                                             '1'+
                                                                                             ~sqn_root
                                                                                            )
                                                                                           ), 
                                                                                           f1(~k,
                                                                                              <
                                                                                               ('1'+
                                                                                                '1'+
                                                                                                ~sqn_root
                                                                                               ), 
                                                                                               ~RAND
                                                                                              >)
                                                                                          >, 
                                                                                          senc(~n,
                                                                                               KDF(<
                                                                                                    f3(~k,
                                                                                                       ~RAND), 
                                                                                                    f4(~k,
                                                                                                       ~RAND)
                                                                                                   >,
                                                                                                   <
                                                                                                    ~RAND, 
                                                                                                    ~supi, 
                                                                                                    'GPI_confidentiality'
                                                                                                   >)), 
                                                                                          Int(KDF(<
                                                                                                   f3(~k,
                                                                                                      ~RAND), 
                                                                                                   f4(~k,
                                                                                                      ~RAND)
                                                                                                  >,
                                                                                                  <
                                                                                                   ~RAND, 
                                                                                                   ~supi, 
                                                                                                   'GPI_integrity'
                                                                                                  >),
                                                                                              <
                                                                                               ~RAND, 
                                                                                               <
                                                                                                (
                                                                                                 f5(~k,
                                                                                                    ~RAND)⊕
                                                                                                 (
                                                                                                  '1'+
                                                                                                  '1'+
                                                                                                  ~sqn_root
                                                                                                 )
                                                                                                ), 
                                                                                                f1(~k,
                                                                                                   <
                                                                                                    (
                                                                                                     '1'+
                                                                                                     '1'+
                                                                                                     ~sqn_root
                                                                                                    ), 
                                                                                                    ~RAND
                                                                                                   >)
                                                                                               >, 
                                                                                               senc(~n,
                                                                                                    KDF(<
                                                                                                         f3(~k,
                                                                                                            ~RAND), 
                                                                                                         f4(~k,
                                                                                                            ~RAND)
                                                                                                        >,
                                                                                                        <
                                                                                                         ~RAND, 
                                                                                                         ~supi, 
                                                                                                         'GPI_confidentiality'
                                                                                                        >))
                                                                                              >)
                                                                                         >
                                                                                   ) ▶₁ #vr.82 ) )
                                                                        case receive_secure
                                                                        step( solve( !KU( K_relay_int
                                                                                     ) @ #vk.64 ) )
                                                                          case c_Int
                                                                          by sorry
                                                                        next
                                                                          case c_KDF
                                                                          by sorry
                                                                        next
                                                                          case c_adec
                                                                          by sorry
                                                                        next
                                                                          case c_aenc
                                                                          by sorry
                                                                        next
                                                                          case c_f1
                                                                          by sorry
                                                                        next
                                                                          case c_f1_star
                                                                          by sorry
                                                                        next
                                                                          case c_f2
                                                                          by sorry
                                                                        next
                                                                          case c_f3
                                                                          by sorry
                                                                        next
                                                                          case c_f4
                                                                          by sorry
                                                                        next
                                                                          case c_f5
                                                                          by sorry
                                                                        next
                                                                          case c_f5_star
                                                                          by sorry
                                                                        next
                                                                          case c_fst
                                                                          by sorry
                                                                        next
                                                                          case c_pair
                                                                          by sorry
                                                                        next
                                                                          case c_pk
                                                                          by sorry
                                                                        next
                                                                          case c_sdec
                                                                          by sorry
                                                                        next
                                                                          case c_senc
                                                                          by sorry
                                                                        next
                                                                          case c_snd
                                                                          by sorry
                                                                        next
                                                                          case c_union
                                                                          by sorry
                                                                        next
                                                                          case c_xor
                                                                          by sorry
                                                                        next
                                                                          case c_zero
                                                                          by sorry
                                                                        next
                                                                          case coerce
                                                                          by sorry
                                                                        next
                                                                          case fresh
                                                                          by sorry
                                                                        next
                                                                          case pub
                                                                          step( solve( !KU( $x
                                                                                       ) @ #vk.45 ) )
                                                                            case pub
                                                                            step( solve( !KU( (
                                                                                               f5(~k,
                                                                                                  ~RAND)⊕
                                                                                               ('1'+
                                                                                                '1'+
                                                                                                ~sqn_root
                                                                                               )
                                                                                              )
                                                                                         ) @ #vk.52 ) )
                                                                              case c_xor
                                                                              by sorry
                                                                            next
                                                                              case coerce
                                                                              step( solve( !KD( (
                                                                                                 f5(~k,
                                                                                                    ~RAND)⊕
                                                                                                 (
                                                                                                  '1'+
                                                                                                  '1'+
                                                                                                  ~sqn_root
                                                                                                 )
                                                                                                )
                                                                                           ) ▶₀ #vk.46 ) )
                                                                                case init_PKMF_relay
                                                                                by step( contradiction
                                                                                         /*
                                                                                         impossible chain
                                                                                         */ )
                                                                              next
                                                                                case init_homeNet
                                                                                by step( contradiction
                                                                                         /*
                                                                                         impossible chain
                                                                                         */ )
                                                                              next
                                                                                case relay_receive_DSMComplete_step8a
                                                                                by sorry
                                                                              next
                                                                                case relay_receive_relay_auth_request_step6
                                                                                step( solve( (#vl.4, 0) ~~> (#vk.46, 0) ) )
                                                                                  case d_0_fst
                                                                                  by step( contradiction
                                                                                           /*
                                                                                           impossible chain
                                                                                           */ )
                                                                                next
                                                                                  case d_0_snd
                                                                                  step( solve( (#vr.76, 0) ~~> (#vk.46, 0) ) )
                                                                                    case d_0_fst
                                                                                    by step( contradiction
                                                                                             /*
                                                                                             impossible chain
                                                                                             */ )
                                                                                  next
                                                                                    case d_0_snd
                                                                                    step( solve( (#vr.77, 0) ~~> (#vk.46, 0) ) )
                                                                                      case d_0_fst
                                                                                      by step( contradiction
                                                                                               /*
                                                                                               impossible chain
                                                                                               */ )
                                                                                    next
                                                                                      case d_0_snd
                                                                                      step( solve( (#vr.78, 0) ~~> (#vk.46, 0) ) )
                                                                                        case d_0_fst
                                                                                        by step( contradiction
                                                                                                 /*
                                                                                                 impossible chain
                                                                                                 */ )
                                                                                      next
                                                                                        case d_0_snd
                                                                                        step( solve( (#vr.79, 0) ~~> (#vk.46, 0) ) )
                                                                                          case d_0_fst
                                                                                          by step( contradiction
                                                                                                   /*
                                                                                                   impossible chain
                                                                                                   */ )
                                                                                        next
                                                                                          case d_0_snd
                                                                                          step( solve( (#vr.80, 0) ~~> (#vk.46, 0) ) )
                                                                                            case d_0_fst
                                                                                            step( solve( (#vr.81, 0) ~~> (#vk.46, 0) ) )
                                                                                              case d_0_fst
                                                                                              by sorry
                                                                                                 // removed
                                                                                            next
                                                                                              case d_0_snd
                                                                                              step( solve( RcvS( ~transactionid.1,
                                                                                                                 ~idPKMF.3,
                                                                                                                 ~supi_relay.3,
                                                                                                                 <
                                                                                                                  'relay_auth_request', 
                                                                                                                  K_NRp, 
                                                                                                                  ~Nonce2.2, 
                                                                                                                  UP_PRUKID, 
                                                                                                                  RAND.1, 
                                                                                                                  AUTN, 
                                                                                                                  P_TID, 
                                                                                                                  GPI_MAC
                                                                                                                 >
                                                                                                           ) ▶₂ #vr.75 ) )
                                                                                                case receive_secure_case_1
                                                                                                step( solve( (#vr.82, 0) ~~> (#vk.46, 0) ) )
                                                                                                  case d_0_fst
                                                                                                  step( solve( (#vr.94, 0) ~~> (#vk.46, 0) ) )
                                                                                                    case d_0_fst
                                                                                                    step( solve( (#vr.95, 0) ~~> (#vk.46, 0) ) )
                                                                                                      case Xor
                                                                                                      step( solve( RcvS( ~cid.1,
                                                                                                                         ~idHN.1,
                                                                                                                         ~idPKMF.4,
                                                                                                                         <
                                                                                                                          'ProseAuthenticateResponse', 
                                                                                                                          KDF(KDF(<
                                                                                                                                   f3(~k,
                                                                                                                                      ~RAND), 
                                                                                                                                   f4(~k,
                                                                                                                                      ~RAND)
                                                                                                                                  >,
                                                                                                                                  <
                                                                                                                                   ~RAND, 
                                                                                                                                   ~supi, 
                                                                                                                                   ~idHN
                                                                                                                                  >),
                                                                                                                              <
                                                                                                                               ~RSC.1, 
                                                                                                                               ~Nonce1.1, 
                                                                                                                               ~Nonce2.1
                                                                                                                              >), 
                                                                                                                          ~Nonce2.1, 
                                                                                                                          ~n, 
                                                                                                                          ~RAND, 
                                                                                                                          <
                                                                                                                           (
                                                                                                                            f5(~k,
                                                                                                                               ~RAND)⊕
                                                                                                                            (
                                                                                                                             '1'+
                                                                                                                             '1'+
                                                                                                                             ~sqn_root
                                                                                                                            )
                                                                                                                           ), 
                                                                                                                           f1(~k,
                                                                                                                              <
                                                                                                                               (
                                                                                                                                '1'+
                                                                                                                                '1'+
                                                                                                                                ~sqn_root
                                                                                                                               ), 
                                                                                                                               ~RAND
                                                                                                                              >)
                                                                                                                          >, 
                                                                                                                          senc(~n,
                                                                                                                               KDF(<
                                                                                                                                    f3(~k,
                                                                                                                                       ~RAND), 
                                                                                                                                    f4(~k,
                                                                                                                                       ~RAND)
                                                                                                                                   >,
                                                                                                                                   <
                                                                                                                                    ~RAND, 
                                                                                                                                    ~supi, 
                                                                                                                                    'GPI_confidentiality'
                                                                                                                                   >)), 
                                                                                                                          Int(KDF(<
                                                                                                                                   f3(~k,
                                                                                                                                      ~RAND), 
                                                                                                                                   f4(~k,
                                                                                                                                      ~RAND)
                                                                                                                                  >,
                                                                                                                                  <
                                                                                                                                   ~RAND, 
                                                                                                                                   ~supi, 
                                                                                                                                   'GPI_integrity'
                                                                                                                                  >),
                                                                                                                              <
                                                                                                                               ~RAND, 
                                                                                                                               <
                                                                                                                                (
                                                                                                                                 f5(~k,
                                                                                                                                    ~RAND)⊕
                                                                                                                                 (
                                                                                                                                  '1'+
                                                                                                                                  '1'+
                                                                                                                                  ~sqn_root
                                                                                                                                 )
                                                                                                                                ), 
                                                                                                                                f1(~k,
                                                                                                                                   <
                                                                                                                                    (
                                                                                                                                     '1'+
                                                                                                                                     '1'+
                                                                                                                                     ~sqn_root
                                                                                                                                    ), 
                                                                                                                                    ~RAND
                                                                                                                                   >)
                                                                                                                               >, 
                                                                                                                               senc(~n,
                                                                                                                                    KDF(<
                                                                                                                                         f3(~k,
                                                                                                                                            ~RAND), 
                                                                                                                                         f4(~k,
                                                                                                                                            ~RAND)
                                                                                                                                        >,
                                                                                                                                        <
                                                                                                                                         ~RAND, 
                                                                                                                                         ~supi, 
                                                                                                                                         'GPI_confidentiality'
                                                                                                                                        >))
                                                                                                                              >)
                                                                                                                         >
                                                                                                                   ) ▶₁ #vr.85 ) )
                                                                                                        case receive_secure
                                                                                                        step( solve( !KU( 'DSMCommand'
                                                                                                                     ) @ #vk.47 ) )
                                                                                                          case coerce
                                                                                                          by sorry
                                                                                                        next
                                                                                                          case pub
                                                                                                          step( solve( !KU( ~Nonce2
                                                                                                                       ) @ #vk.48 ) )
                                                                                                            case fresh
                                                                                                            step( solve( !KU( ~CP_Se_Po
                                                                                                                         ) @ #vk.49 ) )
                                                                                                              case ue_send_DCR_step1
                                                                                                              step( solve( !KU( ~SeCap
                                                                                                                           ) @ #vk.50 ) )
                                                                                                                case ue_send_DCR_step1
                                                                                                                step( solve( !KU( ~LSB_KsessID
                                                                                                                             ) @ #vk.51 ) )
                                                                                                                  case fresh
                                                                                                                  step( solve( !KU( ~Nonce2.1
                                                                                                                               ) @ #vk.53 ) )
                                                                                                                    case relay_receive_relay_auth_request_step6
                                                                                                                    step( solve( !KU( ~CP_Se_Po.1
                                                                                                                                 ) @ #vk.72 ) )
                                                                                                                      case ue_send_DCR_step1
                                                                                                                      step( solve( RcvS( ~cid.1,
                                                                                                                                         ~idHN.1,
                                                                                                                                         ~idPKMF.3,
                                                                                                                                         <
                                                                                                                                          'ProseAuthenticateResponse', 
                                                                                                                                          KDF(KDF(<
                                                                                                                                                   f3(~k,
                                                                                                                                                      ~RAND), 
                                                                                                                                                   f4(~k,
                                                                                                                                                      ~RAND)
                                                                                                                                                  >,
                                                                                                                                                  <
                                                                                                                                                   ~RAND, 
                                                                                                                                                   ~supi, 
                                                                                                                                                   ~idHN
                                                                                                                                                  >),
                                                                                                                                              <
                                                                                                                                               ~RSC.1, 
                                                                                                                                               ~Nonce1.1, 
                                                                                                                                               ~Nonce2.1
                                                                                                                                              >), 
                                                                                                                                          ~Nonce2.1, 
                                                                                                                                          ~n, 
                                                                                                                                          ~RAND, 
                                                                                                                                          <
                                                                                                                                           (
                                                                                                                                            f5(~k,
                                                                                                                                               ~RAND)⊕
                                                                                                                                            (
                                                                                                                                             '1'+
                                                                                                                                             '1'+
                                                                                                                                             ~sqn_root
                                                                                                                                            )
                                                                                                                                           ), 
                                                                                                                                           f1(~k,
                                                                                                                                              <
                                                                                                                                               (
                                                                                                                                                '1'+
                                                                                                                                                '1'+
                                                                                                                                                ~sqn_root
                                                                                                                                               ), 
                                                                                                                                               ~RAND
                                                                                                                                              >)
                                                                                                                                          >, 
                                                                                                                                          senc(~n,
                                                                                                                                               KDF(<
                                                                                                                                                    f3(~k,
                                                                                                                                                       ~RAND), 
                                                                                                                                                    f4(~k,
                                                                                                                                                       ~RAND)
                                                                                                                                                   >,
                                                                                                                                                   <
                                                                                                                                                    ~RAND, 
                                                                                                                                                    ~supi, 
                                                                                                                                                    'GPI_confidentiality'
                                                                                                                                                   >)), 
                                                                                                                                          Int(KDF(<
                                                                                                                                                   f3(~k,
                                                                                                                                                      ~RAND), 
                                                                                                                                                   f4(~k,
                                                                                                                                                      ~RAND)
                                                                                                                                                  >,
                                                                                                                                                  <
                                                                                                                                                   ~RAND, 
                                                                                                                                                   ~supi, 
                                                                                                                                                   'GPI_integrity'
                                                                                                                                                  >),
                                                                                                                                              <
                                                                                                                                               ~RAND, 
                                                                                                                                               <
                                                                                                                                                (
                                                                                                                                                 f5(~k,
                                                                                                                                                    ~RAND)⊕
                                                                                                                                                 (
                                                                                                                                                  '1'+
                                                                                                                                                  '1'+
                                                                                                                                                  ~sqn_root
                                                                                                                                                 )
                                                                                                                                                ), 
                                                                                                                                                f1(~k,
                                                                                                                                                   <
                                                                                                                                                    (
                                                                                                                                                     '1'+
                                                                                                                                                     '1'+
                                                                                                                                                     ~sqn_root
                                                                                                                                                    ), 
                                                                                                                                                    ~RAND
                                                                                                                                                   >)
                                                                                                                                               >, 
                                                                                                                                               senc(~n,
                                                                                                                                                    KDF(<
                                                                                                                                                         f3(~k,
                                                                                                                                                            ~RAND), 
                                                                                                                                                         f4(~k,
                                                                                                                                                            ~RAND)
                                                                                                                                                        >,
                                                                                                                                                        <
                                                                                                                                                         ~RAND, 
                                                                                                                                                         ~supi, 
                                                                                                                                                         'GPI_confidentiality'
                                                                                                                                                        >))
                                                                                                                                              >)
                                                                                                                                         >
                                                                                                                                   ) ▶₁ #j.3 ) )
                                                                                                                        case receive_secure
                                                                                                                        step( solve( RcvS( ~transactionid.1,
                                                                                                                                           ~idPKMF.3,
                                                                                                                                           ~supi_relay.3,
                                                                                                                                           <
                                                                                                                                            'relay_auth_request', 
                                                                                                                                            KDF(KDF(<
                                                                                                                                                     f3(~k,
                                                                                                                                                        ~RAND), 
                                                                                                                                                     f4(~k,
                                                                                                                                                        ~RAND)
                                                                                                                                                    >,
                                                                                                                                                    <
                                                                                                                                                     ~RAND, 
                                                                                                                                                     ~supi, 
                                                                                                                                                     ~idHN
                                                                                                                                                    >),
                                                                                                                                                <
                                                                                                                                                 ~RSC.1, 
                                                                                                                                                 ~Nonce1.1, 
                                                                                                                                                 ~Nonce2.1
                                                                                                                                                >), 
                                                                                                                                            ~Nonce2.1, 
                                                                                                                                            ~n, 
                                                                                                                                            ~RAND, 
                                                                                                                                            <
                                                                                                                                             (
                                                                                                                                              f5(~k,
                                                                                                                                                 ~RAND)⊕
                                                                                                                                              (
                                                                                                                                               '1'+
                                                                                                                                               '1'+
                                                                                                                                               ~sqn_root
                                                                                                                                              )
                                                                                                                                             ), 
                                                                                                                                             f1(~k,
                                                                                                                                                <
                                                                                                                                                 (
                                                                                                                                                  '1'+
                                                                                                                                                  '1'+
                                                                                                                                                  ~sqn_root
                                                                                                                                                 ), 
                                                                                                                                                 ~RAND
                                                                                                                                                >)
                                                                                                                                            >, 
                                                                                                                                            senc(~n,
                                                                                                                                                 KDF(<
                                                                                                                                                      f3(~k,
                                                                                                                                                         ~RAND), 
                                                                                                                                                      f4(~k,
                                                                                                                                                         ~RAND)
                                                                                                                                                     >,
                                                                                                                                                     <
                                                                                                                                                      ~RAND, 
                                                                                                                                                      ~supi, 
                                                                                                                                                      'GPI_confidentiality'
                                                                                                                                                     >)), 
                                                                                                                                            Int(KDF(<
                                                                                                                                                     f3(~k,
                                                                                                                                                        ~RAND), 
                                                                                                                                                     f4(~k,
                                                                                                                                                        ~RAND)
                                                                                                                                                    >,
                                                                                                                                                    <
                                                                                                                                                     ~RAND, 
                                                                                                                                                     ~supi, 
                                                                                                                                                     'GPI_integrity'
                                                                                                                                                    >),
                                                                                                                                                <
                                                                                                                                                 ~RAND, 
                                                                                                                                                 <
                                                                                                                                                  (
                                                                                                                                                   f5(~k,
                                                                                                                                                      ~RAND)⊕
                                                                                                                                                   (
                                                                                                                                                    '1'+
                                                                                                                                                    '1'+
                                                                                                                                                    ~sqn_root
                                                                                                                                                   )
                                                                                                                                                  ), 
                                                                                                                                                  f1(~k,
                                                                                                                                                     <
                                                                                                                                                      (
                                                                                                                                                       '1'+
                                                                                                                                                       '1'+
                                                                                                                                                       ~sqn_root
                                                                                                                                                      ), 
                                                                                                                                                      ~RAND
                                                                                                                                                     >)
                                                                                                                                                 >, 
                                                                                                                                                 senc(~n,
                                                                                                                                                      KDF(<
                                                                                                                                                           f3(~k,
                                                                                                                                                              ~RAND), 
                                                                                                                                                           f4(~k,
                                                                                                                                                              ~RAND)
                                                                                                                                                          >,
                                                                                                                                                          <
                                                                                                                                                           ~RAND, 
                                                                                                                                                           ~supi, 
                                                                                                                                                           'GPI_confidentiality'
                                                                                                                                                          >))
                                                                                                                                                >)
                                                                                                                                           >
                                                                                                                                     ) ▶₂ #vr.97 ) )
                                                                                                                          case receive_secure
                                                                                                                          step( solve( !KU( ~SeCap.1
                                                                                                                                       ) @ #vk.64 ) )
                                                                                                                            case ue_send_DCR_step1
                                                                                                                            step( solve( RcvS( ~cid.1,
                                                                                                                                               ~idHN.1,
                                                                                                                                               ~idPKMF.3,
                                                                                                                                               <
                                                                                                                                                'ProseAuthenticateResponse', 
                                                                                                                                                KDF(KDF(<
                                                                                                                                                         f3(~k,
                                                                                                                                                            ~RAND), 
                                                                                                                                                         f4(~k,
                                                                                                                                                            ~RAND)
                                                                                                                                                        >,
                                                                                                                                                        <
                                                                                                                                                         ~RAND, 
                                                                                                                                                         ~supi, 
                                                                                                                                                         ~idHN
                                                                                                                                                        >),
                                                                                                                                                    <
                                                                                                                                                     ~RSC.1, 
                                                                                                                                                     ~Nonce1.1, 
                                                                                                                                                     ~Nonce2.1
                                                                                                                                                    >), 
                                                                                                                                                ~Nonce2.1, 
                                                                                                                                                ~n, 
                                                                                                                                                ~RAND, 
                                                                                                                                                <
                                                                                                                                                 (
                                                                                                                                                  f5(~k,
                                                                                                                                                     ~RAND)⊕
                                                                                                                                                  (
                                                                                                                                                   '1'+
                                                                                                                                                   '1'+
                                                                                                                                                   ~sqn_root
                                                                                                                                                  )
                                                                                                                                                 ), 
                                                                                                                                                 f1(~k,
                                                                                                                                                    <
                                                                                                                                                     (
                                                                                                                                                      '1'+
                                                                                                                                                      '1'+
                                                                                                                                                      ~sqn_root
                                                                                                                                                     ), 
                                                                                                                                                     ~RAND
                                                                                                                                                    >)
                                                                                                                                                >, 
                                                                                                                                                senc(~n,
                                                                                                                                                     KDF(<
                                                                                                                                                          f3(~k,
                                                                                                                                                             ~RAND), 
                                                                                                                                                          f4(~k,
                                                                                                                                                             ~RAND)
                                                                                                                                                         >,
                                                                                                                                                         <
                                                                                                                                                          ~RAND, 
                                                                                                                                                          ~supi, 
                                                                                                                                                          'GPI_confidentiality'
                                                                                                                                                         >)), 
                                                                                                                                                Int(KDF(<
                                                                                                                                                         f3(~k,
                                                                                                                                                            ~RAND), 
                                                                                                                                                         f4(~k,
                                                                                                                                                            ~RAND)
                                                                                                                                                        >,
                                                                                                                                                        <
                                                                                                                                                         ~RAND, 
                                                                                                                                                         ~supi, 
                                                                                                                                                         'GPI_integrity'
                                                                                                                                                        >),
                                                                                                                                                    <
                                                                                                                                                     ~RAND, 
                                                                                                                                                     <
                                                                                                                                                      (
                                                                                                                                                       f5(~k,
                                                                                                                                                          ~RAND)⊕
                                                                                                                                                       (
                                                                                                                                                        '1'+
                                                                                                                                                        '1'+
                                                                                                                                                        ~sqn_root
                                                                                                                                                       )
                                                                                                                                                      ), 
                                                                                                                                                      f1(~k,
                                                                                                                                                         <
                                                                                                                                                          (
                                                                                                                                                           '1'+
                                                                                                                                                           '1'+
                                                                                                                                                           ~sqn_root
                                                                                                                                                          ), 
                                                                                                                                                          ~RAND
                                                                                                                                                         >)
                                                                                                                                                     >, 
                                                                                                                                                     senc(~n,
                                                                                                                                                          KDF(<
                                                                                                                                                               f3(~k,
                                                                                                                                                                  ~RAND), 
                                                                                                                                                               f4(~k,
                                                                                                                                                                  ~RAND)
                                                                                                                                                              >,
                                                                                                                                                              <
                                                                                                                                                               ~RAND, 
                                                                                                                                                               ~supi, 
                                                                                                                                                               'GPI_confidentiality'
                                                                                                                                                              >))
                                                                                                                                                    >)
                                                                                                                                               >
                                                                                                                                         ) ▶₁ #vr.113 ) )
                                                                                                                              case receive_secure
                                                                                                                              step( solve( !KU( ~LSB_KsessID.1
                                                                                                                                           ) @ #vk.56 ) )
                                                                                                                                case relay_receive_relay_auth_request_step6
                                                                                                                                step( solve( !KU( '1'
                                                                                                                                             ) @ #vk.66 ) )
                                                                                                                                  case coerce
                                                                                                                                  by sorry
                                                                                                                                next
                                                                                                                                  case pub
                                                                                                                                  step( solve( RcvS( ~cid.1,
                                                                                                                                                     ~idHN.1,
                                                                                                                                                     ~idPKMF.3,
                                                                                                                                                     <
                                                                                                                                                      'ProseAuthenticateResponse', 
                                                                                                                                                      KDF(KDF(<
                                                                                                                                                               f3(~k,
                                                                                                                                                                  ~RAND), 
                                                                                                                                                               f4(~k,
                                                                                                                                                                  ~RAND)
                                                                                                                                                              >,
                                                                                                                                                              <
                                                                                                                                                               ~RAND, 
                                                                                                                                                               ~supi, 
                                                                                                                                                               ~idHN
                                                                                                                                                              >),
                                                                                                                                                          <
                                                                                                                                                           ~RSC.1, 
                                                                                                                                                           ~Nonce1.1, 
                                                                                                                                                           ~Nonce2.1
                                                                                                                                                          >), 
                                                                                                                                                      ~Nonce2.1, 
                                                                                                                                                      ~n, 
                                                                                                                                                      ~RAND, 
                                                                                                                                                      <
                                                                                                                                                       (
                                                                                                                                                        f5(~k,
                                                                                                                                                           ~RAND)⊕
                                                                                                                                                        (
                                                                                                                                                         '1'+
                                                                                                                                                         '1'+
                                                                                                                                                         ~sqn_root
                                                                                                                                                        )
                                                                                                                                                       ), 
                                                                                                                                                       f1(~k,
                                                                                                                                                          <
                                                                                                                                                           (
                                                                                                                                                            '1'+
                                                                                                                                                            '1'+
                                                                                                                                                            ~sqn_root
                                                                                                                                                           ), 
                                                                                                                                                           ~RAND
                                                                                                                                                          >)
                                                                                                                                                      >, 
                                                                                                                                                      senc(~n,
                                                                                                                                                           KDF(<
                                                                                                                                                                f3(~k,
                                                                                                                                                                   ~RAND), 
                                                                                                                                                                f4(~k,
                                                                                                                                                                   ~RAND)
                                                                                                                                                               >,
                                                                                                                                                               <
                                                                                                                                                                ~RAND, 
                                                                                                                                                                ~supi, 
                                                                                                                                                                'GPI_confidentiality'
                                                                                                                                                               >)), 
                                                                                                                                                      Int(KDF(<
                                                                                                                                                               f3(~k,
                                                                                                                                                                  ~RAND), 
                                                                                                                                                               f4(~k,
                                                                                                                                                                  ~RAND)
                                                                                                                                                              >,
                                                                                                                                                              <
                                                                                                                                                               ~RAND, 
                                                                                                                                                               ~supi, 
                                                                                                                                                               'GPI_integrity'
                                                                                                                                                              >),
                                                                                                                                                          <
                                                                                                                                                           ~RAND, 
                                                                                                                                                           <
                                                                                                                                                            (
                                                                                                                                                             f5(~k,
                                                                                                                                                                ~RAND)⊕
                                                                                                                                                             (
                                                                                                                                                              '1'+
                                                                                                                                                              '1'+
                                                                                                                                                              ~sqn_root
                                                                                                                                                             )
                                                                                                                                                            ), 
                                                                                                                                                            f1(~k,
                                                                                                                                                               <
                                                                                                                                                                (
                                                                                                                                                                 '1'+
                                                                                                                                                                 '1'+
                                                                                                                                                                 ~sqn_root
                                                                                                                                                                ), 
                                                                                                                                                                ~RAND
                                                                                                                                                               >)
                                                                                                                                                           >, 
                                                                                                                                                           senc(~n,
                                                                                                                                                                KDF(<
                                                                                                                                                                     f3(~k,
                                                                                                                                                                        ~RAND), 
                                                                                                                                                                     f4(~k,
                                                                                                                                                                        ~RAND)
                                                                                                                                                                    >,
                                                                                                                                                                    <
                                                                                                                                                                     ~RAND, 
                                                                                                                                                                     ~supi, 
                                                                                                                                                                     'GPI_confidentiality'
                                                                                                                                                                    >))
                                                                                                                                                          >)
                                                                                                                                                     >
                                                                                                                                               ) ▶₁ #j.3 ) )
                                                                                                                                    case receive_secure
                                                                                                                                    step( solve( !KU( ~idHN
                                                                                                                                                 ) @ #vk.58 ) )
                                                                                                                                      case init_homeNet
                                                                                                                                      step( solve( !KU( ~User_info_remote
                                                                                                                                                   ) @ #vk.59 ) )
                                                                                                                                        case ue_send_DCR_step1_case_1
                                                                                                                                        step( solve( !KU( ~MSB_KsessID.1
                                                                                                                                                     ) @ #vk.62 ) )
                                                                                                                                          case ue_receive_DSMCommand_step7a
                                                                                                                                          by step( contradiction
                                                                                                                                                   /*
                                                                                                                                                   cyclic
                                                                                                                                                   */ )
                                                                                                                                        next
                                                                                                                                          case ue_send_DCR_step1
                                                                                                                                          step( solve( !KU( ~RAND
                                                                                                                                                       ) @ #vk.60 ) )
                                                                                                                                            case relay_receive_relay_auth_request_step6
                                                                                                                                            step( solve( RcvS( ~cid.1,
                                                                                                                                                               ~idHN.2,
                                                                                                                                                               ~idPKMF.4,
                                                                                                                                                               <
                                                                                                                                                                'ProseAuthenticateResponse', 
                                                                                                                                                                KDF(KDF(<
                                                                                                                                                                         f3(~k,
                                                                                                                                                                            ~RAND), 
                                                                                                                                                                         f4(~k,
                                                                                                                                                                            ~RAND)
                                                                                                                                                                        >,
                                                                                                                                                                        <
                                                                                                                                                                         ~RAND, 
                                                                                                                                                                         ~supi, 
                                                                                                                                                                         ~idHN
                                                                                                                                                                        >),
                                                                                                                                                                    <
                                                                                                                                                                     ~RSC.1, 
                                                                                                                                                                     ~Nonce1.1, 
                                                                                                                                                                     ~Nonce2.1
                                                                                                                                                                    >), 
                                                                                                                                                                ~Nonce2.1, 
                                                                                                                                                                ~n, 
                                                                                                                                                                ~RAND, 
                                                                                                                                                                <
                                                                                                                                                                 (
                                                                                                                                                                  f5(~k,
                                                                                                                                                                     ~RAND)⊕
                                                                                                                                                                  (
                                                                                                                                                                   '1'+
                                                                                                                                                                   '1'+
                                                                                                                                                                   ~sqn_root
                                                                                                                                                                  )
                                                                                                                                                                 ), 
                                                                                                                                                                 f1(~k,
                                                                                                                                                                    <
                                                                                                                                                                     (
                                                                                                                                                                      '1'+
                                                                                                                                                                      '1'+
                                                                                                                                                                      ~sqn_root
                                                                                                                                                                     ), 
                                                                                                                                                                     ~RAND
                                                                                                                                                                    >)
                                                                                                                                                                >, 
                                                                                                                                                                senc(~n,
                                                                                                                                                                     KDF(<
                                                                                                                                                                          f3(~k,
                                                                                                                                                                             ~RAND), 
                                                                                                                                                                          f4(~k,
                                                                                                                                                                             ~RAND)
                                                                                                                                                                         >,
                                                                                                                                                                         <
                                                                                                                                                                          ~RAND, 
                                                                                                                                                                          ~supi, 
                                                                                                                                                                          'GPI_confidentiality'
                                                                                                                                                                         >)), 
                                                                                                                                                                Int(KDF(<
                                                                                                                                                                         f3(~k,
                                                                                                                                                                            ~RAND), 
                                                                                                                                                                         f4(~k,
                                                                                                                                                                            ~RAND)
                                                                                                                                                                        >,
                                                                                                                                                                        <
                                                                                                                                                                         ~RAND, 
                                                                                                                                                                         ~supi, 
                                                                                                                                                                         'GPI_integrity'
                                                                                                                                                                        >),
                                                                                                                                                                    <
                                                                                                                                                                     ~RAND, 
                                                                                                                                                                     <
                                                                                                                                                                      (
                                                                                                                                                                       f5(~k,
                                                                                                                                                                          ~RAND)⊕
                                                                                                                                                                       (
                                                                                                                                                                        '1'+
                                                                                                                                                                        '1'+
                                                                                                                                                                        ~sqn_root
                                                                                                                                                                       )
                                                                                                                                                                      ), 
                                                                                                                                                                      f1(~k,
                                                                                                                                                                         <
                                                                                                                                                                          (
                                                                                                                                                                           '1'+
                                                                                                                                                                           '1'+
                                                                                                                                                                           ~sqn_root
                                                                                                                                                                          ), 
                                                                                                                                                                          ~RAND
                                                                                                                                                                         >)
                                                                                                                                                                     >, 
                                                                                                                                                                     senc(~n,
                                                                                                                                                                          KDF(<
                                                                                                                                                                               f3(~k,
                                                                                                                                                                                  ~RAND), 
                                                                                                                                                                               f4(~k,
                                                                                                                                                                                  ~RAND)
                                                                                                                                                                              >,
                                                                                                                                                                              <
                                                                                                                                                                               ~RAND, 
                                                                                                                                                                               ~supi, 
                                                                                                                                                                               'GPI_confidentiality'
                                                                                                                                                                              >))
                                                                                                                                                                    >)
                                                                                                                                                               >
                                                                                                                                                         ) ▶₁ #j.3 ) )
                                                                                                                                              case receive_secure
                                                                                                                                              step( solve( RcvS( ~transactionid.1,
                                                                                                                                                                 ~idPKMF.3,
                                                                                                                                                                 ~supi_relay.3,
                                                                                                                                                                 <
                                                                                                                                                                  'relay_auth_request', 
                                                                                                                                                                  KDF(KDF(<
                                                                                                                                                                           f3(~k,
                                                                                                                                                                              ~RAND), 
                                                                                                                                                                           f4(~k,
                                                                                                                                                                              ~RAND)
                                                                                                                                                                          >,
                                                                                                                                                                          <
                                                                                                                                                                           ~RAND, 
                                                                                                                                                                           ~supi, 
                                                                                                                                                                           ~idHN
                                                                                                                                                                          >),
                                                                                                                                                                      <
                                                                                                                                                                       ~RSC.1, 
                                                                                                                                                                       ~Nonce1.1, 
                                                                                                                                                                       ~Nonce2.1
                                                                                                                                                                      >), 
                                                                                                                                                                  ~Nonce2.1, 
                                                                                                                                                                  ~n, 
                                                                                                                                                                  ~RAND, 
                                                                                                                                                                  <
                                                                                                                                                                   (
                                                                                                                                                                    f5(~k,
                                                                                                                                                                       ~RAND)⊕
                                                                                                                                                                    (
                                                                                                                                                                     '1'+
                                                                                                                                                                     '1'+
                                                                                                                                                                     ~sqn_root
                                                                                                                                                                    )
                                                                                                                                                                   ), 
                                                                                                                                                                   f1(~k,
                                                                                                                                                                      <
                                                                                                                                                                       (
                                                                                                                                                                        '1'+
                                                                                                                                                                        '1'+
                                                                                                                                                                        ~sqn_root
                                                                                                                                                                       ), 
                                                                                                                                                                       ~RAND
                                                                                                                                                                      >)
                                                                                                                                                                  >, 
                                                                                                                                                                  senc(~n,
                                                                                                                                                                       KDF(<
                                                                                                                                                                            f3(~k,
                                                                                                                                                                               ~RAND), 
                                                                                                                                                                            f4(~k,
                                                                                                                                                                               ~RAND)
                                                                                                                                                                           >,
                                                                                                                                                                           <
                                                                                                                                                                            ~RAND, 
                                                                                                                                                                            ~supi, 
                                                                                                                                                                            'GPI_confidentiality'
                                                                                                                                                                           >)), 
                                                                                                                                                                  Int(KDF(<
                                                                                                                                                                           f3(~k,
                                                                                                                                                                              ~RAND), 
                                                                                                                                                                           f4(~k,
                                                                                                                                                                              ~RAND)
                                                                                                                                                                          >,
                                                                                                                                                                          <
                                                                                                                                                                           ~RAND, 
                                                                                                                                                                           ~supi, 
                                                                                                                                                                           'GPI_integrity'
                                                                                                                                                                          >),
                                                                                                                                                                      <
                                                                                                                                                                       ~RAND, 
                                                                                                                                                                       <
                                                                                                                                                                        (
                                                                                                                                                                         f5(~k,
                                                                                                                                                                            ~RAND)⊕
                                                                                                                                                                         (
                                                                                                                                                                          '1'+
                                                                                                                                                                          '1'+
                                                                                                                                                                          ~sqn_root
                                                                                                                                                                         )
                                                                                                                                                                        ), 
                                                                                                                                                                        f1(~k,
                                                                                                                                                                           <
                                                                                                                                                                            (
                                                                                                                                                                             '1'+
                                                                                                                                                                             '1'+
                                                                                                                                                                             ~sqn_root
                                                                                                                                                                            ), 
                                                                                                                                                                            ~RAND
                                                                                                                                                                           >)
                                                                                                                                                                       >, 
                                                                                                                                                                       senc(~n,
                                                                                                                                                                            KDF(<
                                                                                                                                                                                 f3(~k,
                                                                                                                                                                                    ~RAND), 
                                                                                                                                                                                 f4(~k,
                                                                                                                                                                                    ~RAND)
                                                                                                                                                                                >,
                                                                                                                                                                                <
                                                                                                                                                                                 ~RAND, 
                                                                                                                                                                                 ~supi, 
                                                                                                                                                                                 'GPI_confidentiality'
                                                                                                                                                                                >))
                                                                                                                                                                      >)
                                                                                                                                                                 >
                                                                                                                                                           ) ▶₂ #vr.128 ) )
                                                                                                                                                case receive_secure
                                                                                                                                                step( solve( RcvS( ~cid.1,
                                                                                                                                                                   ~idHN.1,
                                                                                                                                                                   ~idPKMF.3,
                                                                                                                                                                   <
                                                                                                                                                                    'ProseAuthenticateResponse', 
                                                                                                                                                                    KDF(KDF(<
                                                                                                                                                                             f3(~k,
                                                                                                                                                                                ~RAND), 
                                                                                                                                                                             f4(~k,
                                                                                                                                                                                ~RAND)
                                                                                                                                                                            >,
                                                                                                                                                                            <
                                                                                                                                                                             ~RAND, 
                                                                                                                                                                             ~supi, 
                                                                                                                                                                             ~idHN
                                                                                                                                                                            >),
                                                                                                                                                                        <
                                                                                                                                                                         ~RSC.1, 
                                                                                                                                                                         ~Nonce1.1, 
                                                                                                                                                                         ~Nonce2.1
                                                                                                                                                                        >), 
                                                                                                                                                                    ~Nonce2.1, 
                                                                                                                                                                    ~n, 
                                                                                                                                                                    ~RAND, 
                                                                                                                                                                    <
                                                                                                                                                                     (
                                                                                                                                                                      f5(~k,
                                                                                                                                                                         ~RAND)⊕
                                                                                                                                                                      (
                                                                                                                                                                       '1'+
                                                                                                                                                                       '1'+
                                                                                                                                                                       ~sqn_root
                                                                                                                                                                      )
                                                                                                                                                                     ), 
                                                                                                                                                                     f1(~k,
                                                                                                                                                                        <
                                                                                                                                                                         (
                                                                                                                                                                          '1'+
                                                                                                                                                                          '1'+
                                                                                                                                                                          ~sqn_root
                                                                                                                                                                         ), 
                                                                                                                                                                         ~RAND
                                                                                                                                                                        >)
                                                                                                                                                                    >, 
                                                                                                                                                                    senc(~n,
                                                                                                                                                                         KDF(<
                                                                                                                                                                              f3(~k,
                                                                                                                                                                                 ~RAND), 
                                                                                                                                                                              f4(~k,
                                                                                                                                                                                 ~RAND)
                                                                                                                                                                             >,
                                                                                                                                                                             <
                                                                                                                                                                              ~RAND, 
                                                                                                                                                                              ~supi, 
                                                                                                                                                                              'GPI_confidentiality'
                                                                                                                                                                             >)), 
                                                                                                                                                                    Int(KDF(<
                                                                                                                                                                             f3(~k,
                                                                                                                                                                                ~RAND), 
                                                                                                                                                                             f4(~k,
                                                                                                                                                                                ~RAND)
                                                                                                                                                                            >,
                                                                                                                                                                            <
                                                                                                                                                                             ~RAND, 
                                                                                                                                                                             ~supi, 
                                                                                                                                                                             'GPI_integrity'
                                                                                                                                                                            >),
                                                                                                                                                                        <
                                                                                                                                                                         ~RAND, 
                                                                                                                                                                         <
                                                                                                                                                                          (
                                                                                                                                                                           f5(~k,
                                                                                                                                                                              ~RAND)⊕
                                                                                                                                                                           (
                                                                                                                                                                            '1'+
                                                                                                                                                                            '1'+
                                                                                                                                                                            ~sqn_root
                                                                                                                                                                           )
                                                                                                                                                                          ), 
                                                                                                                                                                          f1(~k,
                                                                                                                                                                             <
                                                                                                                                                                              (
                                                                                                                                                                               '1'+
                                                                                                                                                                               '1'+
                                                                                                                                                                               ~sqn_root
                                                                                                                                                                              ), 
                                                                                                                                                                              ~RAND
                                                                                                                                                                             >)
                                                                                                                                                                         >, 
                                                                                                                                                                         senc(~n,
                                                                                                                                                                              KDF(<
                                                                                                                                                                                   f3(~k,
                                                                                                                                                                                      ~RAND), 
                                                                                                                                                                                   f4(~k,
                                                                                                                                                                                      ~RAND)
                                                                                                                                                                                  >,
                                                                                                                                                                                  <
                                                                                                                                                                                   ~RAND, 
                                                                                                                                                                                   ~supi, 
                                                                                                                                                                                   'GPI_confidentiality'
                                                                                                                                                                                  >))
                                                                                                                                                                        >)
                                                                                                                                                                   >
                                                                                                                                                             ) ▶₁ #vr.142 ) )
                                                                                                                                                  case receive_secure
                                                                                                                                                  step( solve( !KU( 'DCA'
                                                                                                                                                               ) @ #vk.63 ) )
                                                                                                                                                    case coerce
                                                                                                                                                    by sorry
                                                                                                                                                  next
                                                                                                                                                    case pub
                                                                                                                                                    step( solve( !KU( 'DSMComplete'
                                                                                                                                                                 ) @ #vk.64 ) )
                                                                                                                                                      case coerce
                                                                                                                                                      by sorry
                                                                                                                                                    next
                                                                                                                                                      case pub
                                                                                                                                                      step( solve( !KU( ~Nonce1.1
                                                                                                                                                                   ) @ #vk.64 ) )
                                                                                                                                                        case ue_send_DCR_step1
                                                                                                                                                        step( solve( !KU( (
                                                                                                                                                                           ~RSC.1⊕
                                                                                                                                                                           KDF(~DUCK.1,
                                                                                                                                                                               <
                                                                                                                                                                                ~Nonce1.1, 
                                                                                                                                                                                ~RSC.1
                                                                                                                                                                               >)
                                                                                                                                                                          )
                                                                                                                                                                     ) @ #vk.64 ) )
                                                                                                                                                          case c_xor
                                                                                                                                                          by sorry
                                                                                                                                                        next
                                                                                                                                                          case coerce
                                                                                                                                                          step( solve( !KD( (
                                                                                                                                                                             ~RSC.1⊕
                                                                                                                                                                             KDF(~DUCK.1,
                                                                                                                                                                                 <
                                                                                                                                                                                  ~Nonce1.1, 
                                                                                                                                                                                  ~RSC.1
                                                                                                                                                                                 >)
                                                                                                                                                                            )
                                                                                                                                                                       ) ▶₀ #vk.64 ) )
                                                                                                                                                            case init_PKMF_relay
                                                                                                                                                            by step( contradiction
                                                                                                                                                                     /*
                                                                                                                                                                     impossible chain
                                                                                                                                                                     */ )
                                                                                                                                                          next
                                                                                                                                                            case init_homeNet
                                                                                                                                                            by step( contradiction
                                                                                                                                                                     /*
                                                                                                                                                                     impossible chain
                                                                                                                                                                     */ )
                                                                                                                                                          next
                                                                                                                                                            case relay_receive_DSMComplete_step8a
                                                                                                                                                            by sorry
                                                                                                                                                          next
                                                                                                                                                            case relay_receive_relay_auth_request_step6
                                                                                                                                                            by sorry
                                                                                                                                                          next
                                                                                                                                                            case reveal_Ltk_DUCK
                                                                                                                                                            by step( contradiction
                                                                                                                                                                     /*
                                                                                                                                                                     impossible chain
                                                                                                                                                                     */ )
                                                                                                                                                          next
                                                                                                                                                            case reveal_Ltk_DUIK
                                                                                                                                                            by step( contradiction
                                                                                                                                                                     /*
                                                                                                                                                                     impossible chain
                                                                                                                                                                     */ )
                                                                                                                                                          next
                                                                                                                                                            case reveal_Ltk_RSC
                                                                                                                                                            by step( contradiction
                                                                                                                                                                     /*
                                                                                                                                                                     impossible chain
                                                                                                                                                                     */ )
                                                                                                                                                          next
                                                                                                                                                            case reveal_Ltk_supi_relay
                                                                                                                                                            by step( contradiction
                                                                                                                                                                     /*
                                                                                                                                                                     impossible chain
                                                                                                                                                                     */ )
                                                                                                                                                          next
                                                                                                                                                            case ue_Direct_Security_Mode_Failure_step7b
                                                                                                                                                            by sorry
                                                                                                                                                          next
                                                                                                                                                            case ue_receive_DSMCommand_step7a
                                                                                                                                                            by sorry
                                                                                                                                                          next
                                                                                                                                                            case ue_send_DCR_step1
                                                                                                                                                            step( solve( (#vl.6, 0) ~~> (#vk.64, 0) ) )
                                                                                                                                                              case d_0_fst
                                                                                                                                                              by sorry
                                                                                                                                                            next
                                                                                                                                                              case d_0_snd
                                                                                                                                                              step( solve( (#vr.141, 0) ~~> (#vk.64, 0) ) )
                                                                                                                                                                case d_0_fst
                                                                                                                                                                by step( contradiction
                                                                                                                                                                         /*
                                                                                                                                                                         impossible chain
                                                                                                                                                                         */ )
                                                                                                                                                              next
                                                                                                                                                                case d_0_snd
                                                                                                                                                                step( solve( (#vr.142, 0) ~~> (#vk.64, 0) ) )
                                                                                                                                                                  case d_0_fst
                                                                                                                                                                  by step( contradiction
                                                                                                                                                                           /*
                                                                                                                                                                           impossible chain
                                                                                                                                                                           */ )
                                                                                                                                                                next
                                                                                                                                                                  case d_0_snd
                                                                                                                                                                  step( solve( (#vr.143, 0) ~~> (#vk.64, 0) ) )
                                                                                                                                                                    case d_0_fst
                                                                                                                                                                    step( solve( (#vr.144, 0) ~~> (#vk.64, 0) ) )
                                                                                                                                                                      case Xor
                                                                                                                                                                      by ATTACK // trace found
                                                                                                                                                                    next
                                                                                                                                                                      case d_xor_case_1
                                                                                                                                                                      by sorry
                                                                                                                                                                    next
                                                                                                                                                                      case d_xor_case_2
                                                                                                                                                                      by sorry
                                                                                                                                                                    next
                                                                                                                                                                      case d_xor_case_3
                                                                                                                                                                      by step( contradiction
                                                                                                                                                                               /*
                                                                                                                                                                               impossible chain
                                                                                                                                                                               */ )
                                                                                                                                                                    next
                                                                                                                                                                      case d_xor_case_4
                                                                                                                                                                      by step( contradiction
                                                                                                                                                                               /*
                                                                                                                                                                               impossible chain
                                                                                                                                                                               */ )
                                                                                                                                                                    qed
                                                                                                                                                                  next
                                                                                                                                                                    case d_0_snd
                                                                                                                                                                    by sorry
                                                                                                                                                                  qed
                                                                                                                                                                qed
                                                                                                                                                              qed
                                                                                                                                                            qed
                                                                                                                                                          qed
                                                                                                                                                        qed
                                                                                                                                                      qed
                                                                                                                                                    qed
                                                                                                                                                  qed
                                                                                                                                                qed
                                                                                                                                              qed
                                                                                                                                            qed
                                                                                                                                          qed
                                                                                                                                        qed
                                                                                                                                      next
                                                                                                                                        case ue_send_DCR_step1_case_2
                                                                                                                                        by step( contradiction
                                                                                                                                                 /*
                                                                                                                                                 cyclic
                                                                                                                                                 */ )
                                                                                                                                      qed
                                                                                                                                    next
                                                                                                                                      case ue_send_DCR_step1_case_1
                                                                                                                                      by sorry
                                                                                                                                    next
                                                                                                                                      case ue_send_DCR_step1_case_2
                                                                                                                                      by step( contradiction
                                                                                                                                               /*
                                                                                                                                               cyclic
                                                                                                                                               */ )
                                                                                                                                    qed
                                                                                                                                  qed
                                                                                                                                qed
                                                                                                                              qed
                                                                                                                            qed
                                                                                                                          qed
                                                                                                                        qed
                                                                                                                      qed
                                                                                                                    qed
                                                                                                                  qed
                                                                                                                next
                                                                                                                  case init_PKMF_relay
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case init_homeNet
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case relay_receive_relay_auth_request_step6_case_01
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case relay_receive_relay_auth_request_step6_case_02
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case relay_receive_relay_auth_request_step6_case_03
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case relay_receive_relay_auth_request_step6_case_04
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case relay_receive_relay_auth_request_step6_case_05
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case relay_receive_relay_auth_request_step6_case_06
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case relay_receive_relay_auth_request_step6_case_07
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case relay_receive_relay_auth_request_step6_case_08
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case relay_receive_relay_auth_request_step6_case_09
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case relay_receive_relay_auth_request_step6_case_10
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case reveal_Ltk_DUCK_case_1
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case reveal_Ltk_DUCK_case_2
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case reveal_Ltk_DUIK_case_1
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case reveal_Ltk_DUIK_case_2
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case reveal_Ltk_RSC_case_1
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case reveal_Ltk_RSC_case_2
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case reveal_Ltk_supi_relay
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case ue_Direct_Security_Mode_Failure_step7b
                                                                                                                  by step( contradiction
                                                                                                                           /*
                                                                                                                           cyclic
                                                                                                                           */ )
                                                                                                                next
                                                                                                                  case ue_receive_DSMCommand_step7a_case_1
                                                                                                                  by step( contradiction
                                                                                                                           /*
                                                                                                                           cyclic
                                                                                                                           */ )
                                                                                                                next
                                                                                                                  case ue_receive_DSMCommand_step7a_case_2
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case ue_send_DCR_step1_case_01
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case ue_send_DCR_step1_case_02
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case ue_send_DCR_step1_case_03
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case ue_send_DCR_step1_case_04
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case ue_send_DCR_step1_case_05
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case ue_send_DCR_step1_case_06
                                                                                                                  by step( contradiction
                                                                                                                           /*
                                                                                                                           cyclic
                                                                                                                           */ )
                                                                                                                next
                                                                                                                  case ue_send_DCR_step1_case_07
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case ue_send_DCR_step1_case_08
                                                                                                                  by step( contradiction
                                                                                                                           /*
                                                                                                                           cyclic
                                                                                                                           */ )
                                                                                                                next
                                                                                                                  case ue_send_DCR_step1_case_09
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case ue_send_DCR_step1_case_10
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case ue_send_DCR_step1_case_11
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case ue_send_DCR_step1_case_12
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case ue_send_DCR_step1_case_13
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case ue_send_DCR_step1_case_14
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case ue_send_DCR_step1_case_15
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case ue_send_DCR_step1_case_16
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case ue_send_DCR_step1_case_17
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case ue_send_DCR_step1_case_18
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case ue_send_DCR_step1_case_19
                                                                                                                  by sorry
                                                                                                                next
                                                                                                                  case ue_send_DCR_step1_case_20
                                                                                                                  by sorry
                                                                                                                qed
                                                                                                              qed
                                                                                                            qed
                                                                                                          next
                                                                                                            case init_PKMF_relay
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case init_homeNet
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case relay_receive_relay_auth_request_step6_case_01
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case relay_receive_relay_auth_request_step6_case_02
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case relay_receive_relay_auth_request_step6_case_03
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case relay_receive_relay_auth_request_step6_case_04
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case relay_receive_relay_auth_request_step6_case_05
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case relay_receive_relay_auth_request_step6_case_06
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case relay_receive_relay_auth_request_step6_case_07
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case relay_receive_relay_auth_request_step6_case_08
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case relay_receive_relay_auth_request_step6_case_09
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case relay_receive_relay_auth_request_step6_case_10
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case reveal_Ltk_DUCK_case_1
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case reveal_Ltk_DUCK_case_2
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case reveal_Ltk_DUIK_case_1
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case reveal_Ltk_DUIK_case_2
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case reveal_Ltk_RSC_case_1
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case reveal_Ltk_RSC_case_2
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case reveal_Ltk_supi_relay
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case ue_Direct_Security_Mode_Failure_step7b
                                                                                                            by step( contradiction
                                                                                                                     /*
                                                                                                                     cyclic
                                                                                                                     */ )
                                                                                                          next
                                                                                                            case ue_receive_DSMCommand_step7a_case_1
                                                                                                            by step( contradiction
                                                                                                                     /*
                                                                                                                     cyclic
                                                                                                                     */ )
                                                                                                          next
                                                                                                            case ue_receive_DSMCommand_step7a_case_2
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case ue_send_DCR_step1_case_01
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case ue_send_DCR_step1_case_02
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case ue_send_DCR_step1_case_03
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case ue_send_DCR_step1_case_04
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case ue_send_DCR_step1_case_05
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case ue_send_DCR_step1_case_06
                                                                                                            by step( contradiction
                                                                                                                     /*
                                                                                                                     cyclic
                                                                                                                     */ )
                                                                                                          next
                                                                                                            case ue_send_DCR_step1_case_07
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case ue_send_DCR_step1_case_08
                                                                                                            by step( contradiction
                                                                                                                     /*
                                                                                                                     cyclic
                                                                                                                     */ )
                                                                                                          next
                                                                                                            case ue_send_DCR_step1_case_09
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case ue_send_DCR_step1_case_10
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case ue_send_DCR_step1_case_11
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case ue_send_DCR_step1_case_12
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case ue_send_DCR_step1_case_13
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case ue_send_DCR_step1_case_14
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case ue_send_DCR_step1_case_15
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case ue_send_DCR_step1_case_16
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case ue_send_DCR_step1_case_17
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case ue_send_DCR_step1_case_18
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case ue_send_DCR_step1_case_19
                                                                                                            by sorry
                                                                                                          next
                                                                                                            case ue_send_DCR_step1_case_20
                                                                                                            by sorry
                                                                                                          qed
                                                                                                        qed
                                                                                                      qed
                                                                                                    next
                                                                                                      case d_xor_case_1
                                                                                                      by sorry
                                                                                                    next
                                                                                                      case d_xor_case_2
                                                                                                      by sorry
                                                                                                    next
                                                                                                      case d_xor_case_3
                                                                                                      by step( contradiction
                                                                                                               /*
                                                                                                               impossible chain
                                                                                                               */ )
                                                                                                    next
                                                                                                      case d_xor_case_4
                                                                                                      by sorry
                                                                                                    qed
                                                                                                  next
                                                                                                    case d_0_snd
                                                                                                    by sorry
                                                                                                  qed
                                                                                                next
                                                                                                  case d_0_snd
                                                                                                  by sorry
                                                                                                qed
                                                                                              next
                                                                                                case receive_secure_case_2
                                                                                                by sorry
                                                                                              qed
                                                                                            qed
                                                                                          next
                                                                                            case d_0_snd
                                                                                            by sorry
                                                                                          qed
                                                                                        qed
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              next
                                                                                case reveal_Ltk_DUCK
                                                                                by step( contradiction
                                                                                         /*
                                                                                         impossible chain
                                                                                         */ )
                                                                              next
                                                                                case reveal_Ltk_DUIK
                                                                                by step( contradiction
                                                                                         /*
                                                                                         impossible chain
                                                                                         */ )
                                                                              next
                                                                                case reveal_Ltk_RSC
                                                                                by step( contradiction
                                                                                         /*
                                                                                         impossible chain
                                                                                         */ )
                                                                              next
                                                                                case reveal_Ltk_supi_relay
                                                                                by step( contradiction
                                                                                         /*
                                                                                         impossible chain
                                                                                         */ )
                                                                              next
                                                                                case ue_Direct_Security_Mode_Failure_step7b
                                                                                by sorry
                                                                              next
                                                                                case ue_receive_DSMCommand_step7a
                                                                                by sorry
                                                                              next
                                                                                case ue_send_DCR_step1
                                                                                by sorry
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              next
                                                                case relay_receive_relay_auth_request_step6
                                                                by sorry
                                                              qed
                                                            qed
                                                          next
                                                            case ue_send_DCR_step1_case_2
                                                            by step( contradiction /* cyclic */ )
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  next
                                                    case ue_send_DCR_step1_case_2
                                                    by step( contradiction /* cyclic */ )
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2
                  by step( contradiction /* cyclic */ )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case RHS
    step( simplify )
    by sorry
  qed
next
  case Rule_ue_receive_DCA_step9
  by sorry
next
  case Rule_ue_receive_DSMCommand_step7a
  by sorry
next
  case Rule_ue_send_DCR_step1
  by sorry
qed

end